{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : false,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false
  },
  "metadata" : {
    "apiVersion" : "2016-06-27",
    "asyncClient" : "AmazonRekognitionAsyncClient",
    "asyncClientBuilderClassName" : "AmazonRekognitionAsyncClientBuilder",
    "asyncInterface" : "AmazonRekognitionAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AmazonRekognitionModuleInjector",
    "defaultEndpoint" : "rekognition.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "rekognition.us-east-1.amazonaws.com",
    "documentation" : "<p>This is Amazon Rekognition API guide.</p>",
    "endpointPrefix" : "rekognition",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.rekognition",
    "packagePath" : "com/amazonaws/services/rekognition",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Rekognition",
    "serviceName" : "Amazon Rekognition",
    "signingName" : "rekognition",
    "smokeTestsPackageName" : "com.amazonaws.services.rekognition.smoketests",
    "syncClient" : "AmazonRekognitionClient",
    "syncClientBuilderClassName" : "AmazonRekognitionClientBuilder",
    "syncInterface" : "AmazonRekognition",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "CompareFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CompareFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CompareFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CompareFacesRequest, CompareFacesResult>",
      "asyncReturnType" : "CompareFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Compares a face in the <i>source</i> input image with each face detected in the <i>target</i> input image. </p> <note> <p> If the source image contains multiple faces, the service detects the largest face and uses it to compare with each face detected in the target image. </p> </note> <p>In response, the operation returns an array of face matches ordered by similarity score with the highest similarity scores first. For each face match, the response provides a bounding box of the face and <code>confidence</code> value (indicating the level of confidence that the bounding box contains a face). The response also provides a <code>similarity</code> score, which indicates how closely the faces match. </p> <note> <p>By default, only faces with the similarity score of greater than or equal to 80% are returned in the response. You can change this value.</p> </note> <p>In addition to the face matches, the response returns information about the face in the source image, including the bounding box of the face and confidence value.</p> <note> <p> This is a stateless API operation. That is, the operation does not persist any data.</p> </note> <p>For an example, see <a>get-started-exercise-compare-faces</a> </p> <p>This operation requires permissions to perform the <code>rekognition:CompareFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>"
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CompareFacesRequest",
        "variableName" : "compareFacesRequest",
        "variableType" : "CompareFacesRequest",
        "documentation" : "",
        "simpleType" : "CompareFacesRequest",
        "variableSetterType" : "CompareFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "compareFaces",
      "operationName" : "CompareFaces",
      "returnType" : {
        "returnType" : "CompareFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "CompareFacesResult"
    },
    "CreateCollection" : {
      "asyncCallableType" : "java.util.concurrent.Callable<CreateCollectionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<CreateCollectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateCollectionRequest, CreateCollectionResult>",
      "asyncReturnType" : "CreateCollectionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a collection in an AWS region. You can add faces to the collection using the operation. </p> <p>For example, you might create collections, one for each of your application users. A user can then index faces using the <code>IndexFaces</code> operation and persist results in a specific collection. Then, a user can search the collection for faces in the user-specific container. </p> <p>For an example, see <a>example1</a>. </p> <p>This operation requires permissions to perform the <code>rekognition:CreateCollection</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The collection with specific ID already exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "CreateCollectionRequest",
        "variableName" : "createCollectionRequest",
        "variableType" : "CreateCollectionRequest",
        "documentation" : "",
        "simpleType" : "CreateCollectionRequest",
        "variableSetterType" : "CreateCollectionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "createCollection",
      "operationName" : "CreateCollection",
      "returnType" : {
        "returnType" : "CreateCollectionResult",
        "documentation" : null
      },
      "syncReturnType" : "CreateCollectionResult"
    },
    "DeleteCollection" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteCollectionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteCollectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCollectionRequest, DeleteCollectionResult>",
      "asyncReturnType" : "DeleteCollectionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes the specified collection. Note that this operation removes all faces in the collection. For an example, see <a>example1</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:DeleteCollection</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteCollectionRequest",
        "variableName" : "deleteCollectionRequest",
        "variableType" : "DeleteCollectionRequest",
        "documentation" : "",
        "simpleType" : "DeleteCollectionRequest",
        "variableSetterType" : "DeleteCollectionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteCollection",
      "operationName" : "DeleteCollection",
      "returnType" : {
        "returnType" : "DeleteCollectionResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteCollectionResult"
    },
    "DeleteFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteFacesRequest, DeleteFacesResult>",
      "asyncReturnType" : "DeleteFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Deletes faces from a collection. You specify a collection ID and an array of face IDs to remove from the collection.</p> <p>This operation requires permissions to perform the <code>rekognition:DeleteFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DeleteFacesRequest",
        "variableName" : "deleteFacesRequest",
        "variableType" : "DeleteFacesRequest",
        "documentation" : "",
        "simpleType" : "DeleteFacesRequest",
        "variableSetterType" : "DeleteFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteFaces",
      "operationName" : "DeleteFaces",
      "returnType" : {
        "returnType" : "DeleteFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteFacesResult"
    },
    "DetectFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetectFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetectFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetectFacesRequest, DetectFacesResult>",
      "asyncReturnType" : "DetectFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects faces within an image (JPEG or PNG) that is provided as input.</p> <p> For each face detected, the operation returns face details including a bounding box of the face, a confidence value (that the bounding box contains a face), and a fixed set of attributes such as facial landmarks (for example, coordinates of eye and mouth), gender, presence of beard, sunglasses, etc. </p> <p>The face-detection algorithm is most effective on frontal faces. For non-frontal or obscured faces, the algorithm may not detect the faces or might detect faces with lower confidence. </p> <note> <p>This is a stateless API operation. That is, the operation does not persist any data.</p> </note> <p>For an example, see <a>get-started-exercise-detect-faces</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:DetectFaces</code> action. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetectFacesRequest",
        "variableName" : "detectFacesRequest",
        "variableType" : "DetectFacesRequest",
        "documentation" : "",
        "simpleType" : "DetectFacesRequest",
        "variableSetterType" : "DetectFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detectFaces",
      "operationName" : "DetectFaces",
      "returnType" : {
        "returnType" : "DetectFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "DetectFacesResult"
    },
    "DetectLabels" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DetectLabelsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DetectLabelsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetectLabelsRequest, DetectLabelsResult>",
      "asyncReturnType" : "DetectLabelsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects instances of real-world labels within an image (JPEG or PNG) provided as input. This includes objects like flower, tree, and table; events like wedding, graduation, and birthday party; and concepts like landscape, evening, and nature. For an example, see <a>get-started-exercise-detect-labels</a>.</p> <p> For each object, scene, and concept the API returns one or more labels. Each label provides the object name, and the level of confidence that the image contains the object. For example, suppose the input image has a lighthouse, the sea, and a rock. The response will include all three labels, one for each object. </p> <p> <code>{Name: lighthouse, Confidence: 98.4629}</code> </p> <p> <code>{Name: rock,Confidence: 79.2097}</code> </p> <p> <code> {Name: sea,Confidence: 75.061}</code> </p> <p> In the preceding example, the operation returns one label for each of the three objects. The operation can also return multiple labels for the same object in the image. For example, if the input image shows a flower (for example, a tulip), the operation might return the following three labels. </p> <p> <code>{Name: flower,Confidence: 99.0562}</code> </p> <p> <code>{Name: plant,Confidence: 99.0562}</code> </p> <p> <code>{Name: tulip,Confidence: 99.0562}</code> </p> <p>In this example, the detection algorithm more precisely identifies the flower as a tulip.</p> <p> You can provide the input image as an S3 object or as base64-encoded bytes. In response, the API returns an array of labels. In addition, the response also includes the orientation correction. Optionally, you can specify <code>MinConfidence</code> to control the confidence threshold for the labels returned. The default is 50%. You can also add the <code>MaxLabels</code> parameter to limit the number of labels returned. </p> <note> <p>If the object detected is a person, the operation doesn't provide the same facial details that the <a>DetectFaces</a> operation provides.</p> </note> <p>This is a stateless API operation. That is, the operation does not persist any data.</p> <p>This operation requires permissions to perform the <code>rekognition:DetectLabels</code> action. </p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "DetectLabelsRequest",
        "variableName" : "detectLabelsRequest",
        "variableType" : "DetectLabelsRequest",
        "documentation" : "",
        "simpleType" : "DetectLabelsRequest",
        "variableSetterType" : "DetectLabelsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "detectLabels",
      "operationName" : "DetectLabels",
      "returnType" : {
        "returnType" : "DetectLabelsResult",
        "documentation" : null
      },
      "syncReturnType" : "DetectLabelsResult"
    },
    "IndexFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<IndexFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<IndexFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<IndexFacesRequest, IndexFacesResult>",
      "asyncReturnType" : "IndexFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Detects faces in the input image and adds them to the specified collection. </p> <p> Amazon Rekognition does not save the actual faces detected. Instead, the underlying detection algorithm first detects the faces in the input image, and for each face extracts facial features into a feature vector, and stores it in the back-end database. Amazon Rekognition uses feature vectors when performing face match and search operations using the and operations. </p> <p>If you provide the optional <code>externalImageID</code> for the input image you provided, Amazon Rekognition associates this ID with all faces that it detects. When you call the operation, the response returns the external ID. You can use this external image ID to create a client-side index to associate the faces with each image. You can then use the index to find all faces in an image. </p> <p>In response, the operation returns an array of metadata for all detected faces. This includes, the bounding box of the detected face, confidence value (indicating the bounding box contains a face), a face ID assigned by the service for each face that is detected and stored, and an image ID assigned by the service for the input image If you request all facial attributes (using the <code>detectionAttributes</code> parameter, Rekognition returns detailed facial attributes such as facial landmarks (for example, location of eye and mount) and other facial attributes such gender. If you provide the same image, specify the same collection, and use the same external ID in the <code>IndexFaces</code> operation, Rekognition doesn't save duplicate face metadata. </p> <p>For an example, see <a>example2</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:IndexFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "IndexFacesRequest",
        "variableName" : "indexFacesRequest",
        "variableType" : "IndexFacesRequest",
        "documentation" : "",
        "simpleType" : "IndexFacesRequest",
        "variableSetterType" : "IndexFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "indexFaces",
      "operationName" : "IndexFaces",
      "returnType" : {
        "returnType" : "IndexFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "IndexFacesResult"
    },
    "ListCollections" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListCollectionsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListCollectionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCollectionsRequest, ListCollectionsResult>",
      "asyncReturnType" : "ListCollectionsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns list of collection IDs in your account. If the result is truncated, the response also provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p> <p>For an example, see <a>example1</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:ListCollections</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "InvalidPaginationTokenException",
        "documentation" : "<p>Pagination token in the request is not valid.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListCollectionsRequest",
        "variableName" : "listCollectionsRequest",
        "variableType" : "ListCollectionsRequest",
        "documentation" : "",
        "simpleType" : "ListCollectionsRequest",
        "variableSetterType" : "ListCollectionsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listCollections",
      "operationName" : "ListCollections",
      "returnType" : {
        "returnType" : "ListCollectionsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListCollectionsResult"
    },
    "ListFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListFacesRequest, ListFacesResult>",
      "asyncReturnType" : "ListFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns metadata for faces in the specified collection. This metadata includes information such as the bounding box coordinates, the confidence (that the bounding box contains a face), and face ID. For an example, see <a>example3</a>. </p> <p>This operation requires permissions to perform the <code>rekognition:ListFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "InvalidPaginationTokenException",
        "documentation" : "<p>Pagination token in the request is not valid.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "ListFacesRequest",
        "variableName" : "listFacesRequest",
        "variableType" : "ListFacesRequest",
        "documentation" : "",
        "simpleType" : "ListFacesRequest",
        "variableSetterType" : "ListFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listFaces",
      "operationName" : "ListFaces",
      "returnType" : {
        "returnType" : "ListFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListFacesResult"
    },
    "SearchFaces" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SearchFacesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SearchFacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SearchFacesRequest, SearchFacesResult>",
      "asyncReturnType" : "SearchFacesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For a given input face ID, searches the specified collection for matching faces. You get a face ID when you add a face to the collection using the <a>IndexFaces</a> operation. The operation compares the features of the input face with faces in the specified collection. </p> <note> <p>You can also search faces without indexing faces by using the <code>SearchFacesByImage</code> operation.</p> </note> <p> The operation response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match that is found. Along with the metadata, the response also includes a <code>confidence</code> value for each face match, indicating the confidence that the specific face matches the input face. </p> <p>For an example, see <a>example3</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:SearchFaces</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SearchFacesRequest",
        "variableName" : "searchFacesRequest",
        "variableType" : "SearchFacesRequest",
        "documentation" : "",
        "simpleType" : "SearchFacesRequest",
        "variableSetterType" : "SearchFacesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "searchFaces",
      "operationName" : "SearchFaces",
      "returnType" : {
        "returnType" : "SearchFacesResult",
        "documentation" : null
      },
      "syncReturnType" : "SearchFacesResult"
    },
    "SearchFacesByImage" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SearchFacesByImageResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SearchFacesByImageResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SearchFacesByImageRequest, SearchFacesByImageResult>",
      "asyncReturnType" : "SearchFacesByImageResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces. The operation compares the features of the input face with faces in the specified collection. </p> <note> <p> To search for all faces in an input image, you might first call the API, and then use the face IDs returned in subsequent calls to the API. </p> <p> You can also call the <code>DetectFaces</code> API and use the bounding boxes in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code> API. </p> </note> <p> The response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match found. Along with the metadata, the response also includes a <code>similarity</code> indicating how similar the face is to the input face. In the response, the API also returns the bounding box (and a confidence level that the bounding box contains a face) of the face that Rekognition used for the input image. </p> <p>For an example, see <a>example3</a>.</p> <p>This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code> action.</p>",
      "exceptions" : [ {
        "exceptionName" : "InvalidS3ObjectException",
        "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>"
      }, {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>"
      }, {
        "exceptionName" : "ImageTooLargeException",
        "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>"
      }, {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p>You are not authorized to perform the action.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>Collection specified in the request is not found.</p>"
      }, {
        "exceptionName" : "InvalidImageFormatException",
        "documentation" : "<p>The provided image format is not supported. </p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "input" : {
        "variableDeclarationType" : "SearchFacesByImageRequest",
        "variableName" : "searchFacesByImageRequest",
        "variableType" : "SearchFacesByImageRequest",
        "documentation" : "",
        "simpleType" : "SearchFacesByImageRequest",
        "variableSetterType" : "SearchFacesByImageRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "searchFacesByImage",
      "operationName" : "SearchFacesByImage",
      "returnType" : {
        "returnType" : "SearchFacesByImageResult",
        "documentation" : null
      },
      "syncReturnType" : "SearchFacesByImageResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>You are not authorized to perform the action.</p>",
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "AccessDeniedException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "Attribute" : {
      "c2jName" : "Attribute",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "DEFAULT",
        "value" : "DEFAULT"
      }, {
        "name" : "ALL",
        "value" : "ALL"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "Attribute",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Attribute",
        "variableName" : "attribute",
        "variableType" : "Attribute",
        "documentation" : null,
        "simpleType" : "Attribute",
        "variableSetterType" : "Attribute"
      },
      "wrapper" : false
    },
    "Beard" : {
      "c2jName" : "Beard",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@return Boolean value that indicates whether the face has beard or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@return Boolean value that indicates whether the face has beard or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has beard or not.</p>\n@param value Boolean value that indicates whether the face has beard or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face has beard or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Beard",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Beard",
        "variableName" : "beard",
        "variableType" : "Beard",
        "documentation" : null,
        "simpleType" : "Beard",
        "variableSetterType" : "Beard"
      },
      "wrapper" : false
    },
    "BoundingBox" : {
      "c2jName" : "BoundingBox",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Identifies the bounding box around the object or face. The <code>left</code> (x-coordinate) and <code>top</code> (y-coordinate) are coordinates representing the top and left sides of the bounding box. Note that the upper-left corner of the image is the origin (0,0). </p> <p>The <code>top</code> and <code>left</code> values returned are ratios of the overall image size. For example, if the input image is 700x200 pixels, and the top-left coordinate of the bounding box is 350x50 pixels, the API returns a <code>left</code> value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).</p> <p> The <code>width</code> and <code>height</code> values represent the dimensions of the bounding box as a ratio of the overall image dimension. For example, if the input image is 700x200 pixels, and the bounding box width is 70 pixels, the width returned is 0.1. </p> <note> <p> The bounding box coordinates can have negative values. For example, if Amazon Rekognition is able to detect a face that is at the image edge and is only partially visible, the service can return coordinates that are outside the image bounds and, depending on the image edge, you might get negative values or values greater than 1 for the <code>left</code> or <code>top</code> values. </p> </note>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Width",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@return Width of the bounding box as a ratio of the overall image width.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Width",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Width",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Width",
        "setterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "width",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "width",
          "variableType" : "Float",
          "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Height",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@return Height of the bounding box as a ratio of the overall image height.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Height",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Height",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Height",
        "setterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "height",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "height",
          "variableType" : "Float",
          "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Left",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@return Left coordinate of the bounding box as a ratio of overall image width.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Left",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Left",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Left",
        "setterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "left",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "left",
          "variableType" : "Float",
          "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Top",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@return Top coordinate of the bounding box as a ratio of overall image height.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Top",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Top",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Top",
        "setterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "top",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "top",
          "variableType" : "Float",
          "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Height" : {
          "c2jName" : "Height",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@return Height of the bounding box as a ratio of the overall image height.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Height",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Height",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Height",
          "setterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "height",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Height of the bounding box as a ratio of the overall image height.</p>\n@param height Height of the bounding box as a ratio of the overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "height",
            "variableType" : "Float",
            "documentation" : "<p>Height of the bounding box as a ratio of the overall image height.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Left" : {
          "c2jName" : "Left",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@return Left coordinate of the bounding box as a ratio of overall image width.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Left",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Left",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Left",
          "setterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "left",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Left coordinate of the bounding box as a ratio of overall image width.</p>\n@param left Left coordinate of the bounding box as a ratio of overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "left",
            "variableType" : "Float",
            "documentation" : "<p>Left coordinate of the bounding box as a ratio of overall image width.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Top" : {
          "c2jName" : "Top",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@return Top coordinate of the bounding box as a ratio of overall image height.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Top",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Top",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Top",
          "setterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "top",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Top coordinate of the bounding box as a ratio of overall image height.</p>\n@param top Top coordinate of the bounding box as a ratio of overall image height.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "top",
            "variableType" : "Float",
            "documentation" : "<p>Top coordinate of the bounding box as a ratio of overall image height.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Width" : {
          "c2jName" : "Width",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@return Width of the bounding box as a ratio of the overall image width.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Width",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Width",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Width",
          "setterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "width",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Width of the bounding box as a ratio of the overall image width.</p>\n@param width Width of the bounding box as a ratio of the overall image width.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "width",
            "variableType" : "Float",
            "documentation" : "<p>Width of the bounding box as a ratio of the overall image width.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "BoundingBox",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "BoundingBox",
        "variableName" : "boundingBox",
        "variableType" : "BoundingBox",
        "documentation" : null,
        "simpleType" : "BoundingBox",
        "variableSetterType" : "BoundingBox"
      },
      "wrapper" : false
    },
    "CompareFacesMatch" : {
      "c2jName" : "CompareFacesMatch",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provide the bounding box, confidence that the bounding box actually contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Similarity",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence that the faces match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@return Level of confidence that the faces match.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Similarity",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Similarity",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Similarity",
        "setterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence that the faces match.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Face",
        "c2jShape" : "ComparedFace",
        "deprecated" : false,
        "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@return Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
        "getterModel" : {
          "returnType" : "ComparedFace",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Face",
        "setterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
        "setterModel" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ComparedFace",
          "variableName" : "face",
          "variableType" : "ComparedFace",
          "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
          "simpleType" : "ComparedFace",
          "variableSetterType" : "ComparedFace"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "ComparedFace",
          "deprecated" : false,
          "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@return Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
          "getterModel" : {
            "returnType" : "ComparedFace",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Face",
          "setterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).*/",
          "setterModel" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>\n@param face Provides face metadata (bounding box and confidence that the bounding box actually contains a face).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ComparedFace",
            "variableName" : "face",
            "variableType" : "ComparedFace",
            "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
            "simpleType" : "ComparedFace",
            "variableSetterType" : "ComparedFace"
          },
          "xmlNameSpaceUri" : null
        },
        "Similarity" : {
          "c2jName" : "Similarity",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence that the faces match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@return Level of confidence that the faces match.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Similarity",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Similarity",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Similarity",
          "setterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence that the faces match.</p>\n@param similarity Level of confidence that the faces match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence that the faces match.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "CompareFacesMatch",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CompareFacesMatch",
        "variableName" : "compareFacesMatch",
        "variableType" : "CompareFacesMatch",
        "documentation" : null,
        "simpleType" : "CompareFacesMatch",
        "variableSetterType" : "CompareFacesMatch"
      },
      "wrapper" : false
    },
    "CompareFacesRequest" : {
      "c2jName" : "CompareFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "CompareFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.CompareFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "SourceImage",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>Source image either as bytes or an Amazon S3 object</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@return Source image either as bytes or an Amazon S3 object*/",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SourceImage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceImage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SourceImage",
        "setterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object*/",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "sourceImage",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "sourceImage",
          "variableType" : "Image",
          "documentation" : "<p>Source image either as bytes or an Amazon S3 object</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "TargetImage",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>Target image either as bytes or an Amazon S3 object</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@return Target image either as bytes or an Amazon S3 object*/",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "TargetImage",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "TargetImage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "TargetImage",
        "setterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object*/",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "targetImage",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "targetImage",
          "variableType" : "Image",
          "documentation" : "<p>Target image either as bytes or an Amazon S3 object</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SimilarityThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>The minimum level of confidence in the match you want included in the result.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@return The minimum level of confidence in the match you want included in the result.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SimilarityThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SimilarityThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SimilarityThreshold",
        "setterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarityThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarityThreshold",
          "variableType" : "Float",
          "documentation" : "<p>The minimum level of confidence in the match you want included in the result.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SimilarityThreshold" : {
          "c2jName" : "SimilarityThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>The minimum level of confidence in the match you want included in the result.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@return The minimum level of confidence in the match you want included in the result.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SimilarityThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SimilarityThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SimilarityThreshold",
          "setterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarityThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>The minimum level of confidence in the match you want included in the result.</p>\n@param similarityThreshold The minimum level of confidence in the match you want included in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarityThreshold",
            "variableType" : "Float",
            "documentation" : "<p>The minimum level of confidence in the match you want included in the result.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceImage" : {
          "c2jName" : "SourceImage",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>Source image either as bytes or an Amazon S3 object</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@return Source image either as bytes or an Amazon S3 object*/",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SourceImage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceImage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SourceImage",
          "setterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object*/",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "sourceImage",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Source image either as bytes or an Amazon S3 object</p>\n@param sourceImage Source image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "sourceImage",
            "variableType" : "Image",
            "documentation" : "<p>Source image either as bytes or an Amazon S3 object</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "TargetImage" : {
          "c2jName" : "TargetImage",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>Target image either as bytes or an Amazon S3 object</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@return Target image either as bytes or an Amazon S3 object*/",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "TargetImage",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "TargetImage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "TargetImage",
          "setterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object*/",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "targetImage",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Target image either as bytes or an Amazon S3 object</p>\n@param targetImage Target image either as bytes or an Amazon S3 object\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "targetImage",
            "variableType" : "Image",
            "documentation" : "<p>Target image either as bytes or an Amazon S3 object</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "SourceImage", "TargetImage" ],
      "shapeName" : "CompareFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CompareFacesRequest",
        "variableName" : "compareFacesRequest",
        "variableType" : "CompareFacesRequest",
        "documentation" : null,
        "simpleType" : "CompareFacesRequest",
        "variableSetterType" : "CompareFacesRequest"
      },
      "wrapper" : false
    },
    "CompareFacesResult" : {
      "c2jName" : "CompareFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SourceImageFace",
        "c2jShape" : "ComparedSourceImageFace",
        "deprecated" : false,
        "documentation" : "<p>The face from the source image that was used for comparison.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@return The face from the source image that was used for comparison.*/",
        "getterModel" : {
          "returnType" : "ComparedSourceImageFace",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SourceImageFace",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SourceImageFace",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SourceImageFace",
        "setterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.*/",
        "setterModel" : {
          "variableDeclarationType" : "ComparedSourceImageFace",
          "variableName" : "sourceImageFace",
          "variableType" : "ComparedSourceImageFace",
          "documentation" : "",
          "simpleType" : "ComparedSourceImageFace",
          "variableSetterType" : "ComparedSourceImageFace"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ComparedSourceImageFace",
          "variableName" : "sourceImageFace",
          "variableType" : "ComparedSourceImageFace",
          "documentation" : "<p>The face from the source image that was used for comparison.</p>",
          "simpleType" : "ComparedSourceImageFace",
          "variableSetterType" : "ComparedSourceImageFace"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "CompareFacesMatchList",
        "deprecated" : false,
        "documentation" : "<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@return Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.*/",
        "getterModel" : {
          "returnType" : "java.util.List<CompareFacesMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CompareFacesMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "CompareFacesMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "CompareFacesMatch",
              "variableName" : "member",
              "variableType" : "CompareFacesMatch",
              "documentation" : "",
              "simpleType" : "CompareFacesMatch",
              "variableSetterType" : "CompareFacesMatch"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "CompareFacesMatch",
              "variableName" : "member",
              "variableType" : "CompareFacesMatch",
              "documentation" : "",
              "simpleType" : "CompareFacesMatch",
              "variableSetterType" : "CompareFacesMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CompareFacesMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CompareFacesMatch",
          "templateImplType" : "java.util.ArrayList<CompareFacesMatch>",
          "templateType" : "java.util.List<CompareFacesMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<CompareFacesMatch>",
          "documentation" : "",
          "simpleType" : "List<CompareFacesMatch>",
          "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<CompareFacesMatch>",
          "documentation" : "<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>",
          "simpleType" : "List<CompareFacesMatch>",
          "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "CompareFacesMatchList",
          "deprecated" : false,
          "documentation" : "<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@return Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.*/",
          "getterModel" : {
            "returnType" : "java.util.List<CompareFacesMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CompareFacesMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "CompareFacesMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "CompareFacesMatch",
                "variableName" : "member",
                "variableType" : "CompareFacesMatch",
                "documentation" : "",
                "simpleType" : "CompareFacesMatch",
                "variableSetterType" : "CompareFacesMatch"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "CompareFacesMatch",
                "variableName" : "member",
                "variableType" : "CompareFacesMatch",
                "documentation" : "",
                "simpleType" : "CompareFacesMatch",
                "variableSetterType" : "CompareFacesMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CompareFacesMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CompareFacesMatch",
            "templateImplType" : "java.util.ArrayList<CompareFacesMatch>",
            "templateType" : "java.util.List<CompareFacesMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<CompareFacesMatch>",
            "documentation" : "",
            "simpleType" : "List<CompareFacesMatch>",
            "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<CompareFacesMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<CompareFacesMatch>",
            "documentation" : "<p>Provides an array of <code>CompareFacesMatch </code> objects. Each object provides the bounding box, confidence that the bounding box contains a face, and the similarity between the face in the bounding box and the face in the source image.</p>",
            "simpleType" : "List<CompareFacesMatch>",
            "variableSetterType" : "java.util.Collection<CompareFacesMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SourceImageFace" : {
          "c2jName" : "SourceImageFace",
          "c2jShape" : "ComparedSourceImageFace",
          "deprecated" : false,
          "documentation" : "<p>The face from the source image that was used for comparison.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@return The face from the source image that was used for comparison.*/",
          "getterModel" : {
            "returnType" : "ComparedSourceImageFace",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SourceImageFace",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SourceImageFace",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SourceImageFace",
          "setterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.*/",
          "setterModel" : {
            "variableDeclarationType" : "ComparedSourceImageFace",
            "variableName" : "sourceImageFace",
            "variableType" : "ComparedSourceImageFace",
            "documentation" : "",
            "simpleType" : "ComparedSourceImageFace",
            "variableSetterType" : "ComparedSourceImageFace"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>The face from the source image that was used for comparison.</p>\n@param sourceImageFace The face from the source image that was used for comparison.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ComparedSourceImageFace",
            "variableName" : "sourceImageFace",
            "variableType" : "ComparedSourceImageFace",
            "documentation" : "<p>The face from the source image that was used for comparison.</p>",
            "simpleType" : "ComparedSourceImageFace",
            "variableSetterType" : "ComparedSourceImageFace"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "CompareFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CompareFacesResult",
        "variableName" : "compareFacesResult",
        "variableType" : "CompareFacesResult",
        "documentation" : null,
        "simpleType" : "CompareFacesResult",
        "variableSetterType" : "CompareFacesResult"
      },
      "wrapper" : false
    },
    "ComparedFace" : {
      "c2jName" : "ComparedFace",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides face metadata (bounding box and confidence that the bounding box actually contains a face).</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "BoundingBox",
        "setterDocumentation" : "/**\n@param boundingBox */",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@return Level of confidence that what the bounding box contains is a face.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "BoundingBox",
          "setterDocumentation" : "/**\n@param boundingBox */",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@return Level of confidence that what the bounding box contains is a face.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence that what the bounding box contains is a face.</p>\n@param confidence Level of confidence that what the bounding box contains is a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence that what the bounding box contains is a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ComparedFace",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ComparedFace",
        "variableName" : "comparedFace",
        "variableType" : "ComparedFace",
        "documentation" : null,
        "simpleType" : "ComparedFace",
        "variableSetterType" : "ComparedFace"
      },
      "wrapper" : false
    },
    "ComparedSourceImageFace" : {
      "c2jName" : "ComparedSourceImageFace",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Type that describes the face Amazon Rekognition chose to compare with the faces in the target. This contains a bounding box for the selected face and confidence level that the bounding box contains a face. Note that Amazon Rekognition selects the largest face in the source image for this comparison. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "BoundingBox",
        "setterDocumentation" : "/**\n@param boundingBox */",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence that the selected bounding box contains a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@return Confidence that the selected bounding box contains a face.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence that the selected bounding box contains a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "BoundingBox",
          "setterDocumentation" : "/**\n@param boundingBox */",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence that the selected bounding box contains a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@return Confidence that the selected bounding box contains a face.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Confidence that the selected bounding box contains a face.</p>\n@param confidence Confidence that the selected bounding box contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence that the selected bounding box contains a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ComparedSourceImageFace",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ComparedSourceImageFace",
        "variableName" : "comparedSourceImageFace",
        "variableType" : "ComparedSourceImageFace",
        "documentation" : null,
        "simpleType" : "ComparedSourceImageFace",
        "variableSetterType" : "ComparedSourceImageFace"
      },
      "wrapper" : false
    },
    "CreateCollectionRequest" : {
      "c2jName" : "CreateCollectionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "CreateCollection",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.CreateCollection",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID for the collection that you are creating.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@return ID for the collection that you are creating.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID for the collection that you are creating.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID for the collection that you are creating.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@return ID for the collection that you are creating.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID for the collection that you are creating.</p>\n@param collectionId ID for the collection that you are creating.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID for the collection that you are creating.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId" ],
      "shapeName" : "CreateCollectionRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "CreateCollectionRequest",
        "variableName" : "createCollectionRequest",
        "variableType" : "CreateCollectionRequest",
        "documentation" : null,
        "simpleType" : "CreateCollectionRequest",
        "variableSetterType" : "CreateCollectionRequest"
      },
      "wrapper" : false
    },
    "CreateCollectionResult" : {
      "c2jName" : "CreateCollectionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "StatusCode",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@return HTTP status code indicating the result of the operation.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "StatusCode",
        "setterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "CollectionArn",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@return Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionArn",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionArn",
        "setterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionArn",
          "variableType" : "String",
          "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionArn" : {
          "c2jName" : "CollectionArn",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@return Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionArn",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionArn",
          "setterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>\n@param collectionArn Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionArn",
            "variableType" : "String",
            "documentation" : "<p>Amazon Resource Name (ARN) of the collection. You can use this to manage permissions on your resources. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@return HTTP status code indicating the result of the operation.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "StatusCode",
          "setterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>HTTP status code indicating the result of the operation.</p>\n@param statusCode HTTP status code indicating the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>HTTP status code indicating the result of the operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "CreateCollectionResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "CreateCollectionResult",
        "variableName" : "createCollectionResult",
        "variableType" : "CreateCollectionResult",
        "documentation" : null,
        "simpleType" : "CreateCollectionResult",
        "variableSetterType" : "CreateCollectionResult"
      },
      "wrapper" : false
    },
    "DeleteCollectionRequest" : {
      "c2jName" : "DeleteCollectionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "DeleteCollection",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DeleteCollection",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@return ID of the collection to delete.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@return ID of the collection to delete.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of the collection to delete.</p>\n@param collectionId ID of the collection to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId" ],
      "shapeName" : "DeleteCollectionRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteCollectionRequest",
        "variableName" : "deleteCollectionRequest",
        "variableType" : "DeleteCollectionRequest",
        "documentation" : null,
        "simpleType" : "DeleteCollectionRequest",
        "variableSetterType" : "DeleteCollectionRequest"
      },
      "wrapper" : false
    },
    "DeleteCollectionResult" : {
      "c2jName" : "DeleteCollectionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "StatusCode",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@return HTTP status code that indicates the result of the operation.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "StatusCode",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "StatusCode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "StatusCode",
        "setterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "statusCode",
          "variableType" : "Integer",
          "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "StatusCode" : {
          "c2jName" : "StatusCode",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@return HTTP status code that indicates the result of the operation.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "StatusCode",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "StatusCode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "StatusCode",
          "setterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>HTTP status code that indicates the result of the operation.</p>\n@param statusCode HTTP status code that indicates the result of the operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "statusCode",
            "variableType" : "Integer",
            "documentation" : "<p>HTTP status code that indicates the result of the operation.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "DeleteCollectionResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteCollectionResult",
        "variableName" : "deleteCollectionResult",
        "variableType" : "DeleteCollectionResult",
        "documentation" : null,
        "simpleType" : "DeleteCollectionResult",
        "variableSetterType" : "DeleteCollectionResult"
      },
      "wrapper" : false
    },
    "DeleteFacesRequest" : {
      "c2jName" : "DeleteFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "DeleteFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DeleteFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>Collection from which to remove the specific faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@return Collection from which to remove the specific faces.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>Collection from which to remove the specific faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceIds",
        "c2jShape" : "FaceIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of face IDs to delete.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@return An array of face IDs to delete.*/",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "simple" : true,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceIds",
        "setterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "faceIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceIds(java.util.Collection)} or {@link #withFaceIds(java.util.Collection)} if you want to override the existing values.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "faceIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of face IDs to delete.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>Collection from which to remove the specific faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@return Collection from which to remove the specific faces.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Collection from which to remove the specific faces.</p>\n@param collectionId Collection from which to remove the specific faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>Collection from which to remove the specific faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceIds" : {
          "c2jName" : "FaceIds",
          "c2jShape" : "FaceIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of face IDs to delete.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@return An array of face IDs to delete.*/",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "simple" : true,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceIds",
          "setterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n@param faceIds An array of face IDs to delete.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "faceIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of face IDs to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceIds(java.util.Collection)} or {@link #withFaceIds(java.util.Collection)} if you want to override the existing values.</p>\n@param faceIds An array of face IDs to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "faceIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of face IDs to delete.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId", "FaceIds" ],
      "shapeName" : "DeleteFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DeleteFacesRequest",
        "variableName" : "deleteFacesRequest",
        "variableType" : "DeleteFacesRequest",
        "documentation" : null,
        "simpleType" : "DeleteFacesRequest",
        "variableSetterType" : "DeleteFacesRequest"
      },
      "wrapper" : false
    },
    "DeleteFacesResult" : {
      "c2jName" : "DeleteFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "DeletedFaces",
        "c2jShape" : "FaceIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@return An array of strings (face IDs) of the faces that were deleted.*/",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "DeletedFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DeletedFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "simple" : true,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "DeletedFaces",
        "setterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "deletedFaces",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeletedFaces(java.util.Collection)} or {@link #withDeletedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "deletedFaces",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DeletedFaces" : {
          "c2jName" : "DeletedFaces",
          "c2jShape" : "FaceIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@return An array of strings (face IDs) of the faces that were deleted.*/",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "DeletedFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DeletedFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "simple" : true,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "DeletedFaces",
          "setterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "deletedFaces",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of strings (face IDs) of the faces that were deleted.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeletedFaces(java.util.Collection)} or {@link #withDeletedFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param deletedFaces An array of strings (face IDs) of the faces that were deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "deletedFaces",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of strings (face IDs) of the faces that were deleted.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "DeleteFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DeleteFacesResult",
        "variableName" : "deleteFacesResult",
        "variableType" : "DeleteFacesResult",
        "documentation" : null,
        "simpleType" : "DeleteFacesResult",
        "variableSetterType" : "DeleteFacesResult"
      },
      "wrapper" : false
    },
    "DetectFacesRequest" : {
      "c2jName" : "DetectFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "DetectFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DetectFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@return The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Image",
        "setterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Attributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>",
        "enumType" : "Attribute",
        "fluentSetterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "getterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@return A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@see Attribute*/",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Attributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "Attribute",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "getterDocumentation" : "/**\n@return \n@see Attribute*/",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "simple" : true,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "Attributes",
        "setterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@see Attribute*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "attributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "attributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Attributes" : {
          "c2jName" : "Attributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>",
          "enumType" : "Attribute",
          "fluentSetterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "getterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@return A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@see Attribute*/",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Attributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "Attribute",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "getterDocumentation" : "/**\n@return \n@see Attribute*/",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "simple" : true,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "Attributes",
          "setterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@see Attribute*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "attributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setAttributes(java.util.Collection)} or {@link #withAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param attributes A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "attributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of facial attributes you would like to be returned. By default, the API returns subset of facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], the service uses a logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, Rekognition performs additional detection. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@return The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Image",
          "setterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.*/",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>\n@param image The image in which you want to detect faces. You can specify a blob or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The image in which you want to detect faces. You can specify a blob or an S3 object. </p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "Image" ],
      "shapeName" : "DetectFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectFacesRequest",
        "variableName" : "detectFacesRequest",
        "variableType" : "DetectFacesRequest",
        "documentation" : null,
        "simpleType" : "DetectFacesRequest",
        "variableSetterType" : "DetectFacesRequest"
      },
      "wrapper" : false
    },
    "DetectFacesResult" : {
      "c2jName" : "DetectFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceDetails",
        "c2jShape" : "FaceDetailList",
        "deprecated" : false,
        "documentation" : "<p>Details of each face found in the image. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@return Details of each face found in the image.*/",
        "getterModel" : {
          "returnType" : "java.util.List<FaceDetail>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceDetails",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceDetails",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceDetail",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "FaceDetail",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "FaceDetail",
              "variableName" : "member",
              "variableType" : "FaceDetail",
              "documentation" : "",
              "simpleType" : "FaceDetail",
              "variableSetterType" : "FaceDetail"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceDetail",
              "variableName" : "member",
              "variableType" : "FaceDetail",
              "documentation" : "",
              "simpleType" : "FaceDetail",
              "variableSetterType" : "FaceDetail"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceDetail",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceDetail",
          "templateImplType" : "java.util.ArrayList<FaceDetail>",
          "templateType" : "java.util.List<FaceDetail>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceDetails",
        "setterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceDetail>",
          "variableName" : "faceDetails",
          "variableType" : "java.util.List<FaceDetail>",
          "documentation" : "",
          "simpleType" : "List<FaceDetail>",
          "variableSetterType" : "java.util.Collection<FaceDetail>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceDetails(java.util.Collection)} or {@link #withFaceDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceDetail>",
          "variableName" : "faceDetails",
          "variableType" : "java.util.List<FaceDetail>",
          "documentation" : "<p>Details of each face found in the image. </p>",
          "simpleType" : "List<FaceDetail>",
          "variableSetterType" : "java.util.Collection<FaceDetail>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "getterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@return The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@see OrientationCorrection*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@see OrientationCorrection*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceDetails" : {
          "c2jName" : "FaceDetails",
          "c2jShape" : "FaceDetailList",
          "deprecated" : false,
          "documentation" : "<p>Details of each face found in the image. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@return Details of each face found in the image.*/",
          "getterModel" : {
            "returnType" : "java.util.List<FaceDetail>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceDetails",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceDetails",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceDetail",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "FaceDetail",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "FaceDetail",
                "variableName" : "member",
                "variableType" : "FaceDetail",
                "documentation" : "",
                "simpleType" : "FaceDetail",
                "variableSetterType" : "FaceDetail"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceDetail",
                "variableName" : "member",
                "variableType" : "FaceDetail",
                "documentation" : "",
                "simpleType" : "FaceDetail",
                "variableSetterType" : "FaceDetail"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceDetail",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceDetail",
            "templateImplType" : "java.util.ArrayList<FaceDetail>",
            "templateType" : "java.util.List<FaceDetail>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceDetails",
          "setterDocumentation" : "/**<p>Details of each face found in the image. </p>\n@param faceDetails Details of each face found in the image.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceDetail>",
            "variableName" : "faceDetails",
            "variableType" : "java.util.List<FaceDetail>",
            "documentation" : "",
            "simpleType" : "List<FaceDetail>",
            "variableSetterType" : "java.util.Collection<FaceDetail>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Details of each face found in the image. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceDetails(java.util.Collection)} or {@link #withFaceDetails(java.util.Collection)} if you want to override the existing values.</p>\n@param faceDetails Details of each face found in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceDetail>",
            "variableName" : "faceDetails",
            "variableType" : "java.util.List<FaceDetail>",
            "documentation" : "<p>Details of each face found in the image. </p>",
            "simpleType" : "List<FaceDetail>",
            "variableSetterType" : "java.util.Collection<FaceDetail>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "getterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@return The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@see OrientationCorrection*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@see OrientationCorrection*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degrees of rotation. If your application is displaying the image, you can use this value to adjust the orientation. </p> <p>For example, if the service detects that the input image was rotated by 90 degrees, it corrects orientation, performs face detection, and then returns the faces. That is, the bounding box coordinates in the response are based on the corrected orientation. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "DetectFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetectFacesResult",
        "variableName" : "detectFacesResult",
        "variableType" : "DetectFacesResult",
        "documentation" : null,
        "simpleType" : "DetectFacesResult",
        "variableSetterType" : "DetectFacesResult"
      },
      "wrapper" : false
    },
    "DetectLabelsRequest" : {
      "c2jName" : "DetectLabelsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "DetectLabels",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.DetectLabels",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@return The input image. You can provide a blob of image bytes or an S3 object.*/",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Image",
        "setterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.*/",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxLabels",
        "c2jShape" : "UInteger",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@return Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MaxLabels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxLabels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MaxLabels",
        "setterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxLabels",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxLabels",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MinConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MinConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MinConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MinConfidence",
        "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "minConfidence",
          "variableType" : "Float",
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@return The input image. You can provide a blob of image bytes or an S3 object.*/",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Image",
          "setterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.*/",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>The input image. You can provide a blob of image bytes or an S3 object.</p>\n@param image The input image. You can provide a blob of image bytes or an S3 object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "<p>The input image. You can provide a blob of image bytes or an S3 object.</p>",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxLabels" : {
          "c2jName" : "MaxLabels",
          "c2jShape" : "UInteger",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@return Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MaxLabels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxLabels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MaxLabels",
          "setterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxLabels",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>\n@param maxLabels Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxLabels",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of labels you want the service to return in the response. The service returns the specified number of highest confidence labels. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "MinConfidence" : {
          "c2jName" : "MinConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@return Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MinConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MinConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MinConfidence",
          "setterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>\n@param minConfidence Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "minConfidence",
            "variableType" : "Float",
            "documentation" : "<p>Specifies the minimum confidence level for the labels to return. Amazon Rekognition doesn't return any labels with confidence lower than this specified value.</p> <p>If <code>minConfidence</code> is not specified, the operation returns labels with a confidence values greater than or equal to 50 percent.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "Image" ],
      "shapeName" : "DetectLabelsRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "DetectLabelsRequest",
        "variableName" : "detectLabelsRequest",
        "variableType" : "DetectLabelsRequest",
        "documentation" : null,
        "simpleType" : "DetectLabelsRequest",
        "variableSetterType" : "DetectLabelsRequest"
      },
      "wrapper" : false
    },
    "DetectLabelsResult" : {
      "c2jName" : "DetectLabelsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Labels",
        "c2jShape" : "Labels",
        "deprecated" : false,
        "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@return An array of labels for the real-world objects detected.*/",
        "getterModel" : {
          "returnType" : "java.util.List<Label>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Labels",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Labels",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Label",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "Label",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "Label",
              "variableName" : "member",
              "variableType" : "Label",
              "documentation" : "",
              "simpleType" : "Label",
              "variableSetterType" : "Label"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Label",
              "variableName" : "member",
              "variableType" : "Label",
              "documentation" : "",
              "simpleType" : "Label",
              "variableSetterType" : "Label"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Label",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Label",
          "templateImplType" : "java.util.ArrayList<Label>",
          "templateType" : "java.util.List<Label>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "Labels",
        "setterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Label>",
          "variableName" : "labels",
          "variableType" : "java.util.List<Label>",
          "documentation" : "",
          "simpleType" : "List<Label>",
          "variableSetterType" : "java.util.Collection<Label>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLabels(java.util.Collection)} or {@link #withLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Label>",
          "variableName" : "labels",
          "variableType" : "java.util.List<Label>",
          "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
          "simpleType" : "List<Label>",
          "variableSetterType" : "java.util.Collection<Label>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "getterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@return Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@see OrientationCorrection*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@see OrientationCorrection*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Labels" : {
          "c2jName" : "Labels",
          "c2jShape" : "Labels",
          "deprecated" : false,
          "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@return An array of labels for the real-world objects detected.*/",
          "getterModel" : {
            "returnType" : "java.util.List<Label>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Labels",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Labels",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Label",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "Label",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "Label",
                "variableName" : "member",
                "variableType" : "Label",
                "documentation" : "",
                "simpleType" : "Label",
                "variableSetterType" : "Label"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Label",
                "variableName" : "member",
                "variableType" : "Label",
                "documentation" : "",
                "simpleType" : "Label",
                "variableSetterType" : "Label"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Label",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Label",
            "templateImplType" : "java.util.ArrayList<Label>",
            "templateType" : "java.util.List<Label>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "Labels",
          "setterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n@param labels An array of labels for the real-world objects detected.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Label>",
            "variableName" : "labels",
            "variableType" : "java.util.List<Label>",
            "documentation" : "",
            "simpleType" : "List<Label>",
            "variableSetterType" : "java.util.Collection<Label>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of labels for the real-world objects detected. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLabels(java.util.Collection)} or {@link #withLabels(java.util.Collection)} if you want to override the existing values.</p>\n@param labels An array of labels for the real-world objects detected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Label>",
            "variableName" : "labels",
            "variableType" : "java.util.List<Label>",
            "documentation" : "<p>An array of labels for the real-world objects detected. </p>",
            "simpleType" : "List<Label>",
            "variableSetterType" : "java.util.Collection<Label>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "getterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@return Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@see OrientationCorrection*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@see OrientationCorrection*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>\n@param orientationCorrection Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p> Amazon Rekognition returns the orientation of the input image that was detected (clockwise direction). If your application displays the image, you can use this value to correct the orientation. If Rekognition detects that the input image was rotated (for example, by 90 degrees), it first corrects the orientation before detecting the labels. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "DetectLabelsResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "DetectLabelsResult",
        "variableName" : "detectLabelsResult",
        "variableType" : "DetectLabelsResult",
        "documentation" : null,
        "simpleType" : "DetectLabelsResult",
        "variableSetterType" : "DetectLabelsResult"
      },
      "wrapper" : false
    },
    "Emotion" : {
      "c2jName" : "Emotion",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Type",
        "c2jShape" : "EmotionName",
        "deprecated" : false,
        "documentation" : "<p>Type of emotion detected.</p>",
        "enumType" : "EmotionName",
        "fluentSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
        "getterDocumentation" : "/**<p>Type of emotion detected.</p>\n@return Type of emotion detected.\n@see EmotionName*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Type",
        "setterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@see EmotionName*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>Type of emotion detected.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "EmotionName",
          "deprecated" : false,
          "documentation" : "<p>Type of emotion detected.</p>",
          "enumType" : "EmotionName",
          "fluentSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
          "getterDocumentation" : "/**<p>Type of emotion detected.</p>\n@return Type of emotion detected.\n@see EmotionName*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Type",
          "setterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@see EmotionName*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Type of emotion detected.</p>\n@param type Type of emotion detected.\n@return Returns a reference to this object so that method calls can be chained together.\n@see EmotionName*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>Type of emotion detected.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Emotion",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Emotion",
        "variableName" : "emotion",
        "variableType" : "Emotion",
        "documentation" : null,
        "simpleType" : "Emotion",
        "variableSetterType" : "Emotion"
      },
      "wrapper" : false
    },
    "EmotionName" : {
      "c2jName" : "EmotionName",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "HAPPY",
        "value" : "HAPPY"
      }, {
        "name" : "SAD",
        "value" : "SAD"
      }, {
        "name" : "ANGRY",
        "value" : "ANGRY"
      }, {
        "name" : "CONFUSED",
        "value" : "CONFUSED"
      }, {
        "name" : "DISGUSTED",
        "value" : "DISGUSTED"
      }, {
        "name" : "SURPRISED",
        "value" : "SURPRISED"
      }, {
        "name" : "CALM",
        "value" : "CALM"
      }, {
        "name" : "UNKNOWN",
        "value" : "UNKNOWN"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "EmotionName",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "EmotionName",
        "variableName" : "emotionName",
        "variableType" : "EmotionName",
        "documentation" : null,
        "simpleType" : "EmotionName",
        "variableSetterType" : "EmotionName"
      },
      "wrapper" : false
    },
    "EyeOpen" : {
      "c2jName" : "EyeOpen",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@return Boolean value that indicates whether the eyes on the face are open.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@return Boolean value that indicates whether the eyes on the face are open.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the eyes on the face are open.</p>\n@param value Boolean value that indicates whether the eyes on the face are open.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the eyes on the face are open.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "EyeOpen",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "EyeOpen",
        "variableName" : "eyeOpen",
        "variableType" : "EyeOpen",
        "documentation" : null,
        "simpleType" : "EyeOpen",
        "variableSetterType" : "EyeOpen"
      },
      "wrapper" : false
    },
    "Eyeglasses" : {
      "c2jName" : "Eyeglasses",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@return Boolean value that indicates whether the face is wearing eye glasses or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@return Boolean value that indicates whether the face is wearing eye glasses or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing eye glasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is wearing eye glasses or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Eyeglasses",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Eyeglasses",
        "variableName" : "eyeglasses",
        "variableType" : "Eyeglasses",
        "documentation" : null,
        "simpleType" : "Eyeglasses",
        "variableSetterType" : "Eyeglasses"
      },
      "wrapper" : false
    },
    "Face" : {
      "c2jName" : "Face",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Describes the face properties such as the bounding box, face ID, image ID of the source image, and external image ID that you assigned. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@return Unique identifier that Amazon Rekognition assigns to the face.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "FaceId",
        "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "BoundingBox",
        "setterDocumentation" : "/**\n@param boundingBox */",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ImageId",
        "c2jShape" : "ImageId",
        "deprecated" : false,
        "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@return Unique identifier that Amazon Rekognition assigns to the source image.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "ImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "ImageId",
        "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "imageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "imageId",
          "variableType" : "String",
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ExternalImageId",
        "c2jShape" : "ExternalImageId",
        "deprecated" : false,
        "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@return Identifier that you assign to all the faces in the input image.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "ExternalImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ExternalImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "ExternalImageId",
        "setterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "BoundingBox",
          "setterDocumentation" : "/**\n@param boundingBox */",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param boundingBox \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "ExternalImageId" : {
          "c2jName" : "ExternalImageId",
          "c2jShape" : "ExternalImageId",
          "deprecated" : false,
          "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@return Identifier that you assign to all the faces in the input image.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "ExternalImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ExternalImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "ExternalImageId",
          "setterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Identifier that you assign to all the faces in the input image.</p>\n@param externalImageId Identifier that you assign to all the faces in the input image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "<p>Identifier that you assign to all the faces in the input image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceId" : {
          "c2jName" : "FaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@return Unique identifier that Amazon Rekognition assigns to the face.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "FaceId",
          "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the face.</p>\n@param faceId Unique identifier that Amazon Rekognition assigns to the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the face.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageId" : {
          "c2jName" : "ImageId",
          "c2jShape" : "ImageId",
          "deprecated" : false,
          "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@return Unique identifier that Amazon Rekognition assigns to the source image.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "ImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "ImageId",
          "setterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "imageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>\n@param imageId Unique identifier that Amazon Rekognition assigns to the source image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "imageId",
            "variableType" : "String",
            "documentation" : "<p>Unique identifier that Amazon Rekognition assigns to the source image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Face",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Face",
        "variableName" : "face",
        "variableType" : "Face",
        "documentation" : null,
        "simpleType" : "Face",
        "variableSetterType" : "Face"
      },
      "wrapper" : false
    },
    "FaceDetail" : {
      "c2jName" : "FaceDetail",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Structure containing attributes of the face that the algorithm detected.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "BoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>Bounding box of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "BoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "BoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "BoundingBox",
        "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "boundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>Bounding box of the face.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Smile",
        "c2jShape" : "Smile",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Smile",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Smile",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Smile",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Smile",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Smile",
          "variableName" : "smile",
          "variableType" : "Smile",
          "documentation" : "",
          "simpleType" : "Smile",
          "variableSetterType" : "Smile"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Smile",
          "variableName" : "smile",
          "variableType" : "Smile",
          "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
          "simpleType" : "Smile",
          "variableSetterType" : "Smile"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Eyeglasses",
        "c2jShape" : "Eyeglasses",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Eyeglasses",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Eyeglasses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Eyeglasses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Eyeglasses",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Eyeglasses",
          "variableName" : "eyeglasses",
          "variableType" : "Eyeglasses",
          "documentation" : "",
          "simpleType" : "Eyeglasses",
          "variableSetterType" : "Eyeglasses"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Eyeglasses",
          "variableName" : "eyeglasses",
          "variableType" : "Eyeglasses",
          "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
          "simpleType" : "Eyeglasses",
          "variableSetterType" : "Eyeglasses"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Sunglasses",
        "c2jShape" : "Sunglasses",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Sunglasses",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Sunglasses",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Sunglasses",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Sunglasses",
        "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Sunglasses",
          "variableName" : "sunglasses",
          "variableType" : "Sunglasses",
          "documentation" : "",
          "simpleType" : "Sunglasses",
          "variableSetterType" : "Sunglasses"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Sunglasses",
          "variableName" : "sunglasses",
          "variableType" : "Sunglasses",
          "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
          "simpleType" : "Sunglasses",
          "variableSetterType" : "Sunglasses"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Gender",
        "c2jShape" : "Gender",
        "deprecated" : false,
        "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@return Gender of the face and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Gender",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Gender",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Gender",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Gender",
        "setterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Gender",
          "variableName" : "gender",
          "variableType" : "Gender",
          "documentation" : "",
          "simpleType" : "Gender",
          "variableSetterType" : "Gender"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Gender",
          "variableName" : "gender",
          "variableType" : "Gender",
          "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
          "simpleType" : "Gender",
          "variableSetterType" : "Gender"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Beard",
        "c2jShape" : "Beard",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Beard",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Beard",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Beard",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Beard",
        "setterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Beard",
          "variableName" : "beard",
          "variableType" : "Beard",
          "documentation" : "",
          "simpleType" : "Beard",
          "variableSetterType" : "Beard"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Beard",
          "variableName" : "beard",
          "variableType" : "Beard",
          "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
          "simpleType" : "Beard",
          "variableSetterType" : "Beard"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Mustache",
        "c2jShape" : "Mustache",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "Mustache",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Mustache",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Mustache",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Mustache",
        "setterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Mustache",
          "variableName" : "mustache",
          "variableType" : "Mustache",
          "documentation" : "",
          "simpleType" : "Mustache",
          "variableSetterType" : "Mustache"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Mustache",
          "variableName" : "mustache",
          "variableType" : "Mustache",
          "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
          "simpleType" : "Mustache",
          "variableSetterType" : "Mustache"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "EyesOpen",
        "c2jShape" : "EyeOpen",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@return Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "EyeOpen",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "EyesOpen",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "EyesOpen",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "EyesOpen",
        "setterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "EyeOpen",
          "variableName" : "eyesOpen",
          "variableType" : "EyeOpen",
          "documentation" : "",
          "simpleType" : "EyeOpen",
          "variableSetterType" : "EyeOpen"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "EyeOpen",
          "variableName" : "eyesOpen",
          "variableType" : "EyeOpen",
          "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
          "simpleType" : "EyeOpen",
          "variableSetterType" : "EyeOpen"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MouthOpen",
        "c2jShape" : "MouthOpen",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@return Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
        "getterModel" : {
          "returnType" : "MouthOpen",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MouthOpen",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MouthOpen",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MouthOpen",
        "setterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "MouthOpen",
          "variableName" : "mouthOpen",
          "variableType" : "MouthOpen",
          "documentation" : "",
          "simpleType" : "MouthOpen",
          "variableSetterType" : "MouthOpen"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "MouthOpen",
          "variableName" : "mouthOpen",
          "variableType" : "MouthOpen",
          "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
          "simpleType" : "MouthOpen",
          "variableSetterType" : "MouthOpen"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Emotions",
        "c2jShape" : "Emotions",
        "deprecated" : false,
        "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@return The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
        "getterModel" : {
          "returnType" : "java.util.List<Emotion>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Emotions",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Emotions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Emotion",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "Emotion",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "Emotion",
              "variableName" : "member",
              "variableType" : "Emotion",
              "documentation" : "",
              "simpleType" : "Emotion",
              "variableSetterType" : "Emotion"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Emotion",
              "variableName" : "member",
              "variableType" : "Emotion",
              "documentation" : "",
              "simpleType" : "Emotion",
              "variableSetterType" : "Emotion"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Emotion",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Emotion",
          "templateImplType" : "java.util.ArrayList<Emotion>",
          "templateType" : "java.util.List<Emotion>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "Emotions",
        "setterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Emotion>",
          "variableName" : "emotions",
          "variableType" : "java.util.List<Emotion>",
          "documentation" : "",
          "simpleType" : "List<Emotion>",
          "variableSetterType" : "java.util.Collection<Emotion>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEmotions(java.util.Collection)} or {@link #withEmotions(java.util.Collection)} if you want to override the existing values.</p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Emotion>",
          "variableName" : "emotions",
          "variableType" : "java.util.List<Emotion>",
          "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
          "simpleType" : "List<Emotion>",
          "variableSetterType" : "java.util.Collection<Emotion>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Landmarks",
        "c2jShape" : "Landmarks",
        "deprecated" : false,
        "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@param landmarks Indicates the location of the landmark on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@return Indicates the location of the landmark on the face.*/",
        "getterModel" : {
          "returnType" : "java.util.List<Landmark>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Landmarks",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Landmarks",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Landmark",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "Landmark",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Landmark",
              "variableName" : "member",
              "variableType" : "Landmark",
              "documentation" : "",
              "simpleType" : "Landmark",
              "variableSetterType" : "Landmark"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Landmark",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Landmark",
          "templateImplType" : "java.util.ArrayList<Landmark>",
          "templateType" : "java.util.List<Landmark>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "Landmarks",
        "setterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@param landmarks Indicates the location of the landmark on the face.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks Indicates the location of the landmark on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Landmark>",
          "variableName" : "landmarks",
          "variableType" : "java.util.List<Landmark>",
          "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
          "simpleType" : "List<Landmark>",
          "variableSetterType" : "java.util.Collection<Landmark>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Pose",
        "c2jShape" : "Pose",
        "deprecated" : false,
        "documentation" : "<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@return Indicates the pose of the face as determined by pitch, roll, and the yaw.*/",
        "getterModel" : {
          "returnType" : "Pose",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Pose",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Pose",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Pose",
        "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.*/",
        "setterModel" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Pose",
          "variableName" : "pose",
          "variableType" : "Pose",
          "documentation" : "<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>",
          "simpleType" : "Pose",
          "variableSetterType" : "Pose"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Quality",
        "c2jShape" : "ImageQuality",
        "deprecated" : false,
        "documentation" : "<p>Identifies image brightness and sharpness.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@return Identifies image brightness and sharpness.*/",
        "getterModel" : {
          "returnType" : "ImageQuality",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Quality",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Quality",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Quality",
        "setterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.*/",
        "setterModel" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "ImageQuality",
          "variableName" : "quality",
          "variableType" : "ImageQuality",
          "documentation" : "<p>Identifies image brightness and sharpness.</p>",
          "simpleType" : "ImageQuality",
          "variableSetterType" : "ImageQuality"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Beard" : {
          "c2jName" : "Beard",
          "c2jShape" : "Beard",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Beard",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Beard",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Beard",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Beard",
          "setterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Beard",
            "variableName" : "beard",
            "variableType" : "Beard",
            "documentation" : "",
            "simpleType" : "Beard",
            "variableSetterType" : "Beard"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>\n@param beard Indicates whether or not the face has a beard, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Beard",
            "variableName" : "beard",
            "variableType" : "Beard",
            "documentation" : "<p>Indicates whether or not the face has a beard, and the confidence level in the determination.</p>",
            "simpleType" : "Beard",
            "variableSetterType" : "Beard"
          },
          "xmlNameSpaceUri" : null
        },
        "BoundingBox" : {
          "c2jName" : "BoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>Bounding box of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Bounding box of the face.</p>\n@return Bounding box of the face.*/",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "BoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "BoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "BoundingBox",
          "setterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.*/",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Bounding box of the face.</p>\n@param boundingBox Bounding box of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "boundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>Bounding box of the face.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@return Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>\n@param confidence Confidence level that the bounding box contains a face (and not a different object such as a tree).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Confidence level that the bounding box contains a face (and not a different object such as a tree).</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Emotions" : {
          "c2jName" : "Emotions",
          "c2jShape" : "Emotions",
          "deprecated" : false,
          "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@return The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
          "getterModel" : {
            "returnType" : "java.util.List<Emotion>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Emotions",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Emotions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Emotion",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "Emotion",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "Emotion",
                "variableName" : "member",
                "variableType" : "Emotion",
                "documentation" : "",
                "simpleType" : "Emotion",
                "variableSetterType" : "Emotion"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Emotion",
                "variableName" : "member",
                "variableType" : "Emotion",
                "documentation" : "",
                "simpleType" : "Emotion",
                "variableSetterType" : "Emotion"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Emotion",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Emotion",
            "templateImplType" : "java.util.ArrayList<Emotion>",
            "templateType" : "java.util.List<Emotion>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "Emotions",
          "setterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Emotion>",
            "variableName" : "emotions",
            "variableType" : "java.util.List<Emotion>",
            "documentation" : "",
            "simpleType" : "List<Emotion>",
            "variableSetterType" : "java.util.Collection<Emotion>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setEmotions(java.util.Collection)} or {@link #withEmotions(java.util.Collection)} if you want to override the existing values.</p>\n@param emotions The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Emotion>",
            "variableName" : "emotions",
            "variableType" : "java.util.List<Emotion>",
            "documentation" : "<p>The emotions detected on the face, and the confidence level in the determination. For example, HAPPY, SAD, and ANGRY. </p>",
            "simpleType" : "List<Emotion>",
            "variableSetterType" : "java.util.Collection<Emotion>"
          },
          "xmlNameSpaceUri" : null
        },
        "Eyeglasses" : {
          "c2jName" : "Eyeglasses",
          "c2jShape" : "Eyeglasses",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Eyeglasses",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Eyeglasses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Eyeglasses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Eyeglasses",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Eyeglasses",
            "variableName" : "eyeglasses",
            "variableType" : "Eyeglasses",
            "documentation" : "",
            "simpleType" : "Eyeglasses",
            "variableSetterType" : "Eyeglasses"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>\n@param eyeglasses Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Eyeglasses",
            "variableName" : "eyeglasses",
            "variableType" : "Eyeglasses",
            "documentation" : "<p>Indicates whether or not the face is wearing eye glasses, and the confidence level in the determination.</p>",
            "simpleType" : "Eyeglasses",
            "variableSetterType" : "Eyeglasses"
          },
          "xmlNameSpaceUri" : null
        },
        "EyesOpen" : {
          "c2jName" : "EyesOpen",
          "c2jShape" : "EyeOpen",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@return Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "EyeOpen",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "EyesOpen",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "EyesOpen",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "EyesOpen",
          "setterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "EyeOpen",
            "variableName" : "eyesOpen",
            "variableType" : "EyeOpen",
            "documentation" : "",
            "simpleType" : "EyeOpen",
            "variableSetterType" : "EyeOpen"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>\n@param eyesOpen Indicates whether or not the eyes on the face are open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "EyeOpen",
            "variableName" : "eyesOpen",
            "variableType" : "EyeOpen",
            "documentation" : "<p>Indicates whether or not the eyes on the face are open, and the confidence level in the determination.</p>",
            "simpleType" : "EyeOpen",
            "variableSetterType" : "EyeOpen"
          },
          "xmlNameSpaceUri" : null
        },
        "Gender" : {
          "c2jName" : "Gender",
          "c2jShape" : "Gender",
          "deprecated" : false,
          "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@return Gender of the face and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Gender",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Gender",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Gender",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Gender",
          "setterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Gender",
            "variableName" : "gender",
            "variableType" : "Gender",
            "documentation" : "",
            "simpleType" : "Gender",
            "variableSetterType" : "Gender"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Gender of the face and the confidence level in the determination.</p>\n@param gender Gender of the face and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Gender",
            "variableName" : "gender",
            "variableType" : "Gender",
            "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
            "simpleType" : "Gender",
            "variableSetterType" : "Gender"
          },
          "xmlNameSpaceUri" : null
        },
        "Landmarks" : {
          "c2jName" : "Landmarks",
          "c2jShape" : "Landmarks",
          "deprecated" : false,
          "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@param landmarks Indicates the location of the landmark on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@return Indicates the location of the landmark on the face.*/",
          "getterModel" : {
            "returnType" : "java.util.List<Landmark>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Landmarks",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Landmarks",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Landmark",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "Landmark",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Landmark",
                "variableName" : "member",
                "variableType" : "Landmark",
                "documentation" : "",
                "simpleType" : "Landmark",
                "variableSetterType" : "Landmark"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Landmark",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Landmark",
            "templateImplType" : "java.util.ArrayList<Landmark>",
            "templateType" : "java.util.List<Landmark>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "Landmarks",
          "setterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n@param landmarks Indicates the location of the landmark on the face.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates the location of the landmark on the face.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLandmarks(java.util.Collection)} or {@link #withLandmarks(java.util.Collection)} if you want to override the existing values.</p>\n@param landmarks Indicates the location of the landmark on the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Landmark>",
            "variableName" : "landmarks",
            "variableType" : "java.util.List<Landmark>",
            "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
            "simpleType" : "List<Landmark>",
            "variableSetterType" : "java.util.Collection<Landmark>"
          },
          "xmlNameSpaceUri" : null
        },
        "MouthOpen" : {
          "c2jName" : "MouthOpen",
          "c2jShape" : "MouthOpen",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@return Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "MouthOpen",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MouthOpen",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MouthOpen",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MouthOpen",
          "setterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "MouthOpen",
            "variableName" : "mouthOpen",
            "variableType" : "MouthOpen",
            "documentation" : "",
            "simpleType" : "MouthOpen",
            "variableSetterType" : "MouthOpen"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>\n@param mouthOpen Indicates whether or not the mouth on the face is open, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "MouthOpen",
            "variableName" : "mouthOpen",
            "variableType" : "MouthOpen",
            "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
            "simpleType" : "MouthOpen",
            "variableSetterType" : "MouthOpen"
          },
          "xmlNameSpaceUri" : null
        },
        "Mustache" : {
          "c2jName" : "Mustache",
          "c2jShape" : "Mustache",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@return Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Mustache",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Mustache",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Mustache",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Mustache",
          "setterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Mustache",
            "variableName" : "mustache",
            "variableType" : "Mustache",
            "documentation" : "",
            "simpleType" : "Mustache",
            "variableSetterType" : "Mustache"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>\n@param mustache Indicates whether or not the face has a mustache, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Mustache",
            "variableName" : "mustache",
            "variableType" : "Mustache",
            "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
            "simpleType" : "Mustache",
            "variableSetterType" : "Mustache"
          },
          "xmlNameSpaceUri" : null
        },
        "Pose" : {
          "c2jName" : "Pose",
          "c2jShape" : "Pose",
          "deprecated" : false,
          "documentation" : "<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@return Indicates the pose of the face as determined by pitch, roll, and the yaw.*/",
          "getterModel" : {
            "returnType" : "Pose",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Pose",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Pose",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Pose",
          "setterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.*/",
          "setterModel" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>\n@param pose Indicates the pose of the face as determined by pitch, roll, and the yaw.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Pose",
            "variableName" : "pose",
            "variableType" : "Pose",
            "documentation" : "<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>",
            "simpleType" : "Pose",
            "variableSetterType" : "Pose"
          },
          "xmlNameSpaceUri" : null
        },
        "Quality" : {
          "c2jName" : "Quality",
          "c2jShape" : "ImageQuality",
          "deprecated" : false,
          "documentation" : "<p>Identifies image brightness and sharpness.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@return Identifies image brightness and sharpness.*/",
          "getterModel" : {
            "returnType" : "ImageQuality",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Quality",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Quality",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Quality",
          "setterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.*/",
          "setterModel" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Identifies image brightness and sharpness.</p>\n@param quality Identifies image brightness and sharpness.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "ImageQuality",
            "variableName" : "quality",
            "variableType" : "ImageQuality",
            "documentation" : "<p>Identifies image brightness and sharpness.</p>",
            "simpleType" : "ImageQuality",
            "variableSetterType" : "ImageQuality"
          },
          "xmlNameSpaceUri" : null
        },
        "Smile" : {
          "c2jName" : "Smile",
          "c2jShape" : "Smile",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Smile",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Smile",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Smile",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Smile",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Smile",
            "variableName" : "smile",
            "variableType" : "Smile",
            "documentation" : "",
            "simpleType" : "Smile",
            "variableSetterType" : "Smile"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>\n@param smile Indicates whether or not the face is smiling, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Smile",
            "variableName" : "smile",
            "variableType" : "Smile",
            "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
            "simpleType" : "Smile",
            "variableSetterType" : "Smile"
          },
          "xmlNameSpaceUri" : null
        },
        "Sunglasses" : {
          "c2jName" : "Sunglasses",
          "c2jShape" : "Sunglasses",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@return Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
          "getterModel" : {
            "returnType" : "Sunglasses",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Sunglasses",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Sunglasses",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Sunglasses",
          "setterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Sunglasses",
            "variableName" : "sunglasses",
            "variableType" : "Sunglasses",
            "documentation" : "",
            "simpleType" : "Sunglasses",
            "variableSetterType" : "Sunglasses"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>\n@param sunglasses Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Sunglasses",
            "variableName" : "sunglasses",
            "variableType" : "Sunglasses",
            "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
            "simpleType" : "Sunglasses",
            "variableSetterType" : "Sunglasses"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "FaceDetail",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceDetail",
        "variableName" : "faceDetail",
        "variableType" : "FaceDetail",
        "documentation" : null,
        "simpleType" : "FaceDetail",
        "variableSetterType" : "FaceDetail"
      },
      "wrapper" : false
    },
    "FaceMatch" : {
      "c2jName" : "FaceMatch",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides face metadata. In addition, it also provides the confidence in the match of this face with the input face.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Similarity",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@return Confidence in the match of this face with the input face.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Similarity",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Similarity",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Similarity",
        "setterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "similarity",
          "variableType" : "Float",
          "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Face",
        "c2jShape" : "Face",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "Face",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Face",
        "setterDocumentation" : "/**\n@param face */",
        "setterModel" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "Face",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "Face",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Face",
          "setterDocumentation" : "/**\n@param face */",
          "setterModel" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "xmlNameSpaceUri" : null
        },
        "Similarity" : {
          "c2jName" : "Similarity",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@return Confidence in the match of this face with the input face.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Similarity",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Similarity",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Similarity",
          "setterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Confidence in the match of this face with the input face.</p>\n@param similarity Confidence in the match of this face with the input face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "similarity",
            "variableType" : "Float",
            "documentation" : "<p>Confidence in the match of this face with the input face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "FaceMatch",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceMatch",
        "variableName" : "faceMatch",
        "variableType" : "FaceMatch",
        "documentation" : null,
        "simpleType" : "FaceMatch",
        "variableSetterType" : "FaceMatch"
      },
      "wrapper" : false
    },
    "FaceRecord" : {
      "c2jName" : "FaceRecord",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Object containing both the face metadata (stored in the back-end database) and facial attributes that are detected but aren't stored in the database.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Face",
        "c2jShape" : "Face",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "Face",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Face",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Face",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Face",
        "setterDocumentation" : "/**\n@param face */",
        "setterModel" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Face",
          "variableName" : "face",
          "variableType" : "Face",
          "documentation" : "",
          "simpleType" : "Face",
          "variableSetterType" : "Face"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceDetail",
        "c2jShape" : "FaceDetail",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param faceDetail \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "FaceDetail",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceDetail",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceDetail",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "FaceDetail",
        "setterDocumentation" : "/**\n@param faceDetail */",
        "setterModel" : {
          "variableDeclarationType" : "FaceDetail",
          "variableName" : "faceDetail",
          "variableType" : "FaceDetail",
          "documentation" : "",
          "simpleType" : "FaceDetail",
          "variableSetterType" : "FaceDetail"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param faceDetail \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "FaceDetail",
          "variableName" : "faceDetail",
          "variableType" : "FaceDetail",
          "documentation" : "",
          "simpleType" : "FaceDetail",
          "variableSetterType" : "FaceDetail"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Face" : {
          "c2jName" : "Face",
          "c2jShape" : "Face",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "Face",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Face",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Face",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Face",
          "setterDocumentation" : "/**\n@param face */",
          "setterModel" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param face \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Face",
            "variableName" : "face",
            "variableType" : "Face",
            "documentation" : "",
            "simpleType" : "Face",
            "variableSetterType" : "Face"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceDetail" : {
          "c2jName" : "FaceDetail",
          "c2jShape" : "FaceDetail",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param faceDetail \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "FaceDetail",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceDetail",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceDetail",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "FaceDetail",
          "setterDocumentation" : "/**\n@param faceDetail */",
          "setterModel" : {
            "variableDeclarationType" : "FaceDetail",
            "variableName" : "faceDetail",
            "variableType" : "FaceDetail",
            "documentation" : "",
            "simpleType" : "FaceDetail",
            "variableSetterType" : "FaceDetail"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param faceDetail \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "FaceDetail",
            "variableName" : "faceDetail",
            "variableType" : "FaceDetail",
            "documentation" : "",
            "simpleType" : "FaceDetail",
            "variableSetterType" : "FaceDetail"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "FaceRecord",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "FaceRecord",
        "variableName" : "faceRecord",
        "variableType" : "FaceRecord",
        "documentation" : null,
        "simpleType" : "FaceRecord",
        "variableSetterType" : "FaceRecord"
      },
      "wrapper" : false
    },
    "Gender" : {
      "c2jName" : "Gender",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Gender of the face and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "GenderType",
        "deprecated" : false,
        "documentation" : "<p>Gender of the face.</p>",
        "enumType" : "GenderType",
        "fluentSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
        "getterDocumentation" : "/**<p>Gender of the face.</p>\n@return Gender of the face.\n@see GenderType*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@see GenderType*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>Gender of the face.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "GenderType",
          "deprecated" : false,
          "documentation" : "<p>Gender of the face.</p>",
          "enumType" : "GenderType",
          "fluentSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
          "getterDocumentation" : "/**<p>Gender of the face.</p>\n@return Gender of the face.\n@see GenderType*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@see GenderType*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Gender of the face.</p>\n@param value Gender of the face.\n@return Returns a reference to this object so that method calls can be chained together.\n@see GenderType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>Gender of the face.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Gender",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Gender",
        "variableName" : "gender",
        "variableType" : "Gender",
        "documentation" : null,
        "simpleType" : "Gender",
        "variableSetterType" : "Gender"
      },
      "wrapper" : false
    },
    "GenderType" : {
      "c2jName" : "GenderType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "MALE",
        "value" : "MALE"
      }, {
        "name" : "FEMALE",
        "value" : "FEMALE"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "GenderType",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "GenderType",
        "variableName" : "genderType",
        "variableType" : "GenderType",
        "documentation" : null,
        "simpleType" : "GenderType",
        "variableSetterType" : "GenderType"
      },
      "wrapper" : false
    },
    "Image" : {
      "c2jName" : "Image",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides the source image either as bytes or an S3 object.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Bytes",
        "c2jShape" : "ImageBlob",
        "deprecated" : false,
        "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return Blob of image bytes up to 5 MBs.*/",
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Bytes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Bytes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Bytes",
        "setterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nAWS SDK for Java performs a Base64 encoding on this field before sending this request to AWS service by default. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "bytes",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "variableName" : "bytes",
          "variableType" : "java.nio.ByteBuffer",
          "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "S3Object",
        "c2jShape" : "S3Object",
        "deprecated" : false,
        "documentation" : "<p>Identifies an S3 object as the image source.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@return Identifies an S3 object as the image source.*/",
        "getterModel" : {
          "returnType" : "S3Object",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "S3Object",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "S3Object",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "S3Object",
        "setterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.*/",
        "setterModel" : {
          "variableDeclarationType" : "S3Object",
          "variableName" : "s3Object",
          "variableType" : "S3Object",
          "documentation" : "",
          "simpleType" : "S3Object",
          "variableSetterType" : "S3Object"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "S3Object",
          "variableName" : "s3Object",
          "variableType" : "S3Object",
          "documentation" : "<p>Identifies an S3 object as the image source.</p>",
          "simpleType" : "S3Object",
          "variableSetterType" : "S3Object"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Bytes" : {
          "c2jName" : "Bytes",
          "c2jShape" : "ImageBlob",
          "deprecated" : false,
          "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return Blob of image bytes up to 5 MBs.*/",
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Bytes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Bytes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Bytes",
          "setterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p><p>\nAWS SDK for Java performs a Base64 encoding on this field before sending this request to AWS service by default. Users of the SDK should not perform Base64 encoding on this field.\n</p>\n<p>\nWarning: ByteBuffers returned by the SDK are mutable. Changes to the content or position of the byte buffer will be seen by all objects that have a reference to this object. It is recommended to call ByteBuffer.duplicate() or ByteBuffer.asReadOnlyBuffer() before using or reading from the buffer. This behavior will be changed in a future major version of the SDK.\n</p>\n\n@param bytes Blob of image bytes up to 5 MBs.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "bytes",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Blob of image bytes up to 5 MBs.</p>\n@param bytes Blob of image bytes up to 5 MBs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "variableName" : "bytes",
            "variableType" : "java.nio.ByteBuffer",
            "documentation" : "<p>Blob of image bytes up to 5 MBs.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "xmlNameSpaceUri" : null
        },
        "S3Object" : {
          "c2jName" : "S3Object",
          "c2jShape" : "S3Object",
          "deprecated" : false,
          "documentation" : "<p>Identifies an S3 object as the image source.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@return Identifies an S3 object as the image source.*/",
          "getterModel" : {
            "returnType" : "S3Object",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "S3Object",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "S3Object",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "S3Object",
          "setterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.*/",
          "setterModel" : {
            "variableDeclarationType" : "S3Object",
            "variableName" : "s3Object",
            "variableType" : "S3Object",
            "documentation" : "",
            "simpleType" : "S3Object",
            "variableSetterType" : "S3Object"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>Identifies an S3 object as the image source.</p>\n@param s3Object Identifies an S3 object as the image source.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "S3Object",
            "variableName" : "s3Object",
            "variableType" : "S3Object",
            "documentation" : "<p>Identifies an S3 object as the image source.</p>",
            "simpleType" : "S3Object",
            "variableSetterType" : "S3Object"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Image",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Image",
        "variableName" : "image",
        "variableType" : "Image",
        "documentation" : null,
        "simpleType" : "Image",
        "variableSetterType" : "Image"
      },
      "wrapper" : false
    },
    "ImageQuality" : {
      "c2jName" : "ImageQuality",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Identifies image brightness and sharpness. </p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Brightness",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@return Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Brightness",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Brightness",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Brightness",
        "setterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "brightness",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "brightness",
          "variableType" : "Float",
          "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Sharpness",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>Value representing sharpness of the face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@return Value representing sharpness of the face.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Sharpness",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Sharpness",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Sharpness",
        "setterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "sharpness",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "sharpness",
          "variableType" : "Float",
          "documentation" : "<p>Value representing sharpness of the face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Brightness" : {
          "c2jName" : "Brightness",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@return Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Brightness",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Brightness",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Brightness",
          "setterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "brightness",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>\n@param brightness Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "brightness",
            "variableType" : "Float",
            "documentation" : "<p>Value representing brightness of the face. The service returns a value between 0 and 1 (inclusive).</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Sharpness" : {
          "c2jName" : "Sharpness",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>Value representing sharpness of the face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@return Value representing sharpness of the face.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Sharpness",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Sharpness",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Sharpness",
          "setterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "sharpness",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Value representing sharpness of the face.</p>\n@param sharpness Value representing sharpness of the face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "sharpness",
            "variableType" : "Float",
            "documentation" : "<p>Value representing sharpness of the face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ImageQuality",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ImageQuality",
        "variableName" : "imageQuality",
        "variableType" : "ImageQuality",
        "documentation" : null,
        "simpleType" : "ImageQuality",
        "variableSetterType" : "ImageQuality"
      },
      "wrapper" : false
    },
    "ImageTooLargeException" : {
      "c2jName" : "ImageTooLargeException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input image size exceeds the allowed limit. For more information, see <a>limits</a>. </p>",
      "enums" : null,
      "errorCode" : "ImageTooLargeException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "ImageTooLargeException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ImageTooLargeException",
        "variableName" : "imageTooLargeException",
        "variableType" : "ImageTooLargeException",
        "documentation" : null,
        "simpleType" : "ImageTooLargeException",
        "variableSetterType" : "ImageTooLargeException"
      },
      "wrapper" : false
    },
    "IndexFacesRequest" : {
      "c2jName" : "IndexFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "IndexFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.IndexFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@return ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Image",
        "setterDocumentation" : "/**\n@param image */",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ExternalImageId",
        "c2jShape" : "ExternalImageId",
        "deprecated" : false,
        "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@return ID you want to assign to all the faces detected in the image.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "ExternalImageId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ExternalImageId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "ExternalImageId",
        "setterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "externalImageId",
          "variableType" : "String",
          "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "DetectionAttributes",
        "c2jShape" : "Attributes",
        "deprecated" : false,
        "documentation" : "<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>",
        "enumType" : "Attribute",
        "fluentSetterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "getterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@return (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@see Attribute*/",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "DetectionAttributes",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "DetectionAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Attribute",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : "Attribute",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "getterDocumentation" : "/**\n@return \n@see Attribute*/",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "simple" : true,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "DetectionAttributes",
        "setterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@see Attribute*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "detectionAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDetectionAttributes(java.util.Collection)} or {@link #withDetectionAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "detectionAttributes",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@return ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>\n@param collectionId ID of an existing collection to which you want to add the faces that are detected in the input images.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of an existing collection to which you want to add the faces that are detected in the input images.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DetectionAttributes" : {
          "c2jName" : "DetectionAttributes",
          "c2jShape" : "Attributes",
          "deprecated" : false,
          "documentation" : "<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>",
          "enumType" : "Attribute",
          "fluentSetterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "getterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@return (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@see Attribute*/",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "DetectionAttributes",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "DetectionAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Attribute",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : "Attribute",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "getterDocumentation" : "/**\n@return \n@see Attribute*/",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member \n@see Attribute*/",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "simple" : true,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "DetectionAttributes",
          "setterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@see Attribute*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "detectionAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDetectionAttributes(java.util.Collection)} or {@link #withDetectionAttributes(java.util.Collection)} if you want to override the existing values.</p>\n@param detectionAttributes (Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Attribute*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "detectionAttributes",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>(Optional) Returns detailed attributes of indexed faces. By default, the operation returns a subset of the facial attributes. </p> <p>For example, you can specify the value as, [\"ALL\"] or [\"DEFAULT\"]. If you provide both, [\"ALL\", \"DEFAULT\"], Rekognition uses the logical AND operator to determine which attributes to return (in this case, it is all attributes). If you specify all attributes, the service performs additional detection, in addition to the default. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ExternalImageId" : {
          "c2jName" : "ExternalImageId",
          "c2jShape" : "ExternalImageId",
          "deprecated" : false,
          "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@return ID you want to assign to all the faces detected in the image.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "ExternalImageId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ExternalImageId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "ExternalImageId",
          "setterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID you want to assign to all the faces detected in the image.</p>\n@param externalImageId ID you want to assign to all the faces detected in the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "externalImageId",
            "variableType" : "String",
            "documentation" : "<p>ID you want to assign to all the faces detected in the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Image",
          "setterDocumentation" : "/**\n@param image */",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId", "Image" ],
      "shapeName" : "IndexFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "IndexFacesRequest",
        "variableName" : "indexFacesRequest",
        "variableType" : "IndexFacesRequest",
        "documentation" : null,
        "simpleType" : "IndexFacesRequest",
        "variableSetterType" : "IndexFacesRequest"
      },
      "wrapper" : false
    },
    "IndexFacesResult" : {
      "c2jName" : "IndexFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "FaceRecords",
        "c2jShape" : "FaceRecordList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@return An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
        "getterModel" : {
          "returnType" : "java.util.List<FaceRecord>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceRecords",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceRecords",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceRecord",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "FaceRecord",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "FaceRecord",
              "variableName" : "member",
              "variableType" : "FaceRecord",
              "documentation" : "",
              "simpleType" : "FaceRecord",
              "variableSetterType" : "FaceRecord"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceRecord",
              "variableName" : "member",
              "variableType" : "FaceRecord",
              "documentation" : "",
              "simpleType" : "FaceRecord",
              "variableSetterType" : "FaceRecord"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceRecord",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceRecord",
          "templateImplType" : "java.util.ArrayList<FaceRecord>",
          "templateType" : "java.util.List<FaceRecord>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceRecords",
        "setterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceRecord>",
          "variableName" : "faceRecords",
          "variableType" : "java.util.List<FaceRecord>",
          "documentation" : "",
          "simpleType" : "List<FaceRecord>",
          "variableSetterType" : "java.util.Collection<FaceRecord>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceRecords(java.util.Collection)} or {@link #withFaceRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceRecord>",
          "variableName" : "faceRecords",
          "variableType" : "java.util.List<FaceRecord>",
          "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
          "simpleType" : "List<FaceRecord>",
          "variableSetterType" : "java.util.Collection<FaceRecord>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "OrientationCorrection",
        "c2jShape" : "OrientationCorrection",
        "deprecated" : false,
        "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>",
        "enumType" : "OrientationCorrection",
        "fluentSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "getterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@return The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@see OrientationCorrection*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "OrientationCorrection",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "OrientationCorrection",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "OrientationCorrection",
        "setterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@see OrientationCorrection*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "orientationCorrection",
          "variableType" : "String",
          "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceRecords" : {
          "c2jName" : "FaceRecords",
          "c2jShape" : "FaceRecordList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@return An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
          "getterModel" : {
            "returnType" : "java.util.List<FaceRecord>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceRecords",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceRecords",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceRecord",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "FaceRecord",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "FaceRecord",
                "variableName" : "member",
                "variableType" : "FaceRecord",
                "documentation" : "",
                "simpleType" : "FaceRecord",
                "variableSetterType" : "FaceRecord"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceRecord",
                "variableName" : "member",
                "variableType" : "FaceRecord",
                "documentation" : "",
                "simpleType" : "FaceRecord",
                "variableSetterType" : "FaceRecord"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceRecord",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceRecord",
            "templateImplType" : "java.util.ArrayList<FaceRecord>",
            "templateType" : "java.util.List<FaceRecord>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceRecords",
          "setterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceRecord>",
            "variableName" : "faceRecords",
            "variableType" : "java.util.List<FaceRecord>",
            "documentation" : "",
            "simpleType" : "List<FaceRecord>",
            "variableSetterType" : "java.util.Collection<FaceRecord>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceRecords(java.util.Collection)} or {@link #withFaceRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param faceRecords An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceRecord>",
            "variableName" : "faceRecords",
            "variableType" : "java.util.List<FaceRecord>",
            "documentation" : "<p>An array of faces detected and added to the collection. For more information, see <a>howitworks-index-faces</a>. </p>",
            "simpleType" : "List<FaceRecord>",
            "variableSetterType" : "java.util.Collection<FaceRecord>"
          },
          "xmlNameSpaceUri" : null
        },
        "OrientationCorrection" : {
          "c2jName" : "OrientationCorrection",
          "c2jShape" : "OrientationCorrection",
          "deprecated" : false,
          "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>",
          "enumType" : "OrientationCorrection",
          "fluentSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "getterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@return The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@see OrientationCorrection*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "OrientationCorrection",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "OrientationCorrection",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "OrientationCorrection",
          "setterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@see OrientationCorrection*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>\n@param orientationCorrection The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned.\n@return Returns a reference to this object so that method calls can be chained together.\n@see OrientationCorrection*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "orientationCorrection",
            "variableType" : "String",
            "documentation" : "<p>The algorithm detects the image orientation. If it detects that the image was rotated, it returns the degree of rotation. You can use this value to correct the orientation and also appropriately analyze the bounding box coordinates that are returned. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "IndexFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "IndexFacesResult",
        "variableName" : "indexFacesResult",
        "variableType" : "IndexFacesResult",
        "documentation" : null,
        "simpleType" : "IndexFacesResult",
        "variableSetterType" : "IndexFacesResult"
      },
      "wrapper" : false
    },
    "InternalServerErrorException" : {
      "c2jName" : "InternalServerError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition experienced a service issue. Try your call again.</p>",
      "enums" : null,
      "errorCode" : "InternalServerError",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "InternalServerErrorException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InternalServerErrorException",
        "variableName" : "internalServerErrorException",
        "variableType" : "InternalServerErrorException",
        "documentation" : null,
        "simpleType" : "InternalServerErrorException",
        "variableSetterType" : "InternalServerErrorException"
      },
      "wrapper" : false
    },
    "InvalidImageFormatException" : {
      "c2jName" : "InvalidImageFormatException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The provided image format is not supported. </p>",
      "enums" : null,
      "errorCode" : "InvalidImageFormatException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "InvalidImageFormatException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidImageFormatException",
        "variableName" : "invalidImageFormatException",
        "variableType" : "InvalidImageFormatException",
        "documentation" : null,
        "simpleType" : "InvalidImageFormatException",
        "variableSetterType" : "InvalidImageFormatException"
      },
      "wrapper" : false
    },
    "InvalidPaginationTokenException" : {
      "c2jName" : "InvalidPaginationTokenException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Pagination token in the request is not valid.</p>",
      "enums" : null,
      "errorCode" : "InvalidPaginationTokenException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "InvalidPaginationTokenException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidPaginationTokenException",
        "variableName" : "invalidPaginationTokenException",
        "variableType" : "InvalidPaginationTokenException",
        "documentation" : null,
        "simpleType" : "InvalidPaginationTokenException",
        "variableSetterType" : "InvalidPaginationTokenException"
      },
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Input parameter violated a constraint. Validate your parameter before calling the API again.</p>",
      "enums" : null,
      "errorCode" : "InvalidParameterException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "InvalidParameterException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidParameterException",
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "wrapper" : false
    },
    "InvalidS3ObjectException" : {
      "c2jName" : "InvalidS3ObjectException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition is unable to access the S3 object specified in the request.</p>",
      "enums" : null,
      "errorCode" : "InvalidS3ObjectException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "InvalidS3ObjectException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "InvalidS3ObjectException",
        "variableName" : "invalidS3ObjectException",
        "variableType" : "InvalidS3ObjectException",
        "documentation" : null,
        "simpleType" : "InvalidS3ObjectException",
        "variableSetterType" : "InvalidS3ObjectException"
      },
      "wrapper" : false
    },
    "Label" : {
      "c2jName" : "Label",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Structure containing details about the detected label, including bounding box, name, and level of confidence.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Name",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>The name (label) of the object.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The name (label) of the object.</p>\n@return The name (label) of the object.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Name",
        "setterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name (label) of the object.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence.</p>\n@return Level of confidence.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence.</p>\n@return Level of confidence.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence.</p>\n@param confidence Level of confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>The name (label) of the object.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The name (label) of the object.</p>\n@return The name (label) of the object.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Name",
          "setterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>The name (label) of the object.</p>\n@param name The name (label) of the object.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name (label) of the object.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Label",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Label",
        "variableName" : "label",
        "variableType" : "Label",
        "documentation" : null,
        "simpleType" : "Label",
        "variableSetterType" : "Label"
      },
      "wrapper" : false
    },
    "Landmark" : {
      "c2jName" : "Landmark",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates the location of the landmark on the face.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Type",
        "c2jShape" : "LandmarkType",
        "deprecated" : false,
        "documentation" : "<p>Type of the landmark.</p>",
        "enumType" : "LandmarkType",
        "fluentSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
        "getterDocumentation" : "/**<p>Type of the landmark.</p>\n@return Type of the landmark.\n@see LandmarkType*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Type",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Type",
        "setterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@see LandmarkType*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>Type of the landmark.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "X",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@return x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "X",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "X",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "X",
        "setterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "x",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "x",
          "variableType" : "Float",
          "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Y",
        "c2jShape" : "Float",
        "deprecated" : false,
        "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@return y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Y",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Y",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Y",
        "setterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "y",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "y",
          "variableType" : "Float",
          "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Type" : {
          "c2jName" : "Type",
          "c2jShape" : "LandmarkType",
          "deprecated" : false,
          "documentation" : "<p>Type of the landmark.</p>",
          "enumType" : "LandmarkType",
          "fluentSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
          "getterDocumentation" : "/**<p>Type of the landmark.</p>\n@return Type of the landmark.\n@see LandmarkType*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Type",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Type",
          "setterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@see LandmarkType*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Type of the landmark.</p>\n@param type Type of the landmark.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LandmarkType*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>Type of the landmark.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "X" : {
          "c2jName" : "X",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@return x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "X",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "X",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "X",
          "setterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "x",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>\n@param x x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "x",
            "variableType" : "Float",
            "documentation" : "<p>x-coordinate from the top left of the landmark expressed as the ration of the width of the image. For example, if the images is 700x200 and the x-coordinate of the landmark is at 350 pixels, then this value is 0.5. </p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Y" : {
          "c2jName" : "Y",
          "c2jShape" : "Float",
          "deprecated" : false,
          "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@return y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Y",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Y",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Y",
          "setterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "y",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>\n@param y y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "y",
            "variableType" : "Float",
            "documentation" : "<p>y-coordinate from the top left of the landmark expressed as the ration of the height of the image. For example, if the images is 700x200 and the y-coordinate of the landmark is at 100 pixels, then this value is 0.5.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Landmark",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Landmark",
        "variableName" : "landmark",
        "variableType" : "Landmark",
        "documentation" : null,
        "simpleType" : "Landmark",
        "variableSetterType" : "Landmark"
      },
      "wrapper" : false
    },
    "LandmarkType" : {
      "c2jName" : "LandmarkType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "EYE_LEFT",
        "value" : "EYE_LEFT"
      }, {
        "name" : "EYE_RIGHT",
        "value" : "EYE_RIGHT"
      }, {
        "name" : "NOSE",
        "value" : "NOSE"
      }, {
        "name" : "MOUTH_LEFT",
        "value" : "MOUTH_LEFT"
      }, {
        "name" : "MOUTH_RIGHT",
        "value" : "MOUTH_RIGHT"
      }, {
        "name" : "LEFT_EYEBROW_LEFT",
        "value" : "LEFT_EYEBROW_LEFT"
      }, {
        "name" : "LEFT_EYEBROW_RIGHT",
        "value" : "LEFT_EYEBROW_RIGHT"
      }, {
        "name" : "LEFT_EYEBROW_UP",
        "value" : "LEFT_EYEBROW_UP"
      }, {
        "name" : "RIGHT_EYEBROW_LEFT",
        "value" : "RIGHT_EYEBROW_LEFT"
      }, {
        "name" : "RIGHT_EYEBROW_RIGHT",
        "value" : "RIGHT_EYEBROW_RIGHT"
      }, {
        "name" : "RIGHT_EYEBROW_UP",
        "value" : "RIGHT_EYEBROW_UP"
      }, {
        "name" : "LEFT_EYE_LEFT",
        "value" : "LEFT_EYE_LEFT"
      }, {
        "name" : "LEFT_EYE_RIGHT",
        "value" : "LEFT_EYE_RIGHT"
      }, {
        "name" : "LEFT_EYE_UP",
        "value" : "LEFT_EYE_UP"
      }, {
        "name" : "LEFT_EYE_DOWN",
        "value" : "LEFT_EYE_DOWN"
      }, {
        "name" : "RIGHT_EYE_LEFT",
        "value" : "RIGHT_EYE_LEFT"
      }, {
        "name" : "RIGHT_EYE_RIGHT",
        "value" : "RIGHT_EYE_RIGHT"
      }, {
        "name" : "RIGHT_EYE_UP",
        "value" : "RIGHT_EYE_UP"
      }, {
        "name" : "RIGHT_EYE_DOWN",
        "value" : "RIGHT_EYE_DOWN"
      }, {
        "name" : "NOSE_LEFT",
        "value" : "NOSE_LEFT"
      }, {
        "name" : "NOSE_RIGHT",
        "value" : "NOSE_RIGHT"
      }, {
        "name" : "MOUTH_UP",
        "value" : "MOUTH_UP"
      }, {
        "name" : "MOUTH_DOWN",
        "value" : "MOUTH_DOWN"
      }, {
        "name" : "LEFT_PUPIL",
        "value" : "LEFT_PUPIL"
      }, {
        "name" : "RIGHT_PUPIL",
        "value" : "RIGHT_PUPIL"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "LandmarkType",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "LandmarkType",
        "variableName" : "landmarkType",
        "variableType" : "LandmarkType",
        "documentation" : null,
        "simpleType" : "LandmarkType",
        "variableSetterType" : "LandmarkType"
      },
      "wrapper" : false
    },
    "ListCollectionsRequest" : {
      "c2jName" : "ListCollectionsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "ListCollections",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.ListCollections",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>Pagination token from the previous response.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@return Pagination token from the previous response.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>Pagination token from the previous response.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of collection IDs to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@return Maximum number of collection IDs to return.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of collection IDs to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of collection IDs to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@return Maximum number of collection IDs to return.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Maximum number of collection IDs to return.</p>\n@param maxResults Maximum number of collection IDs to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of collection IDs to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>Pagination token from the previous response.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@return Pagination token from the previous response.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Pagination token from the previous response.</p>\n@param nextToken Pagination token from the previous response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>Pagination token from the previous response.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ListCollectionsRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListCollectionsRequest",
        "variableName" : "listCollectionsRequest",
        "variableType" : "ListCollectionsRequest",
        "documentation" : null,
        "simpleType" : "ListCollectionsRequest",
        "variableSetterType" : "ListCollectionsRequest"
      },
      "wrapper" : false
    },
    "ListCollectionsResult" : {
      "c2jName" : "ListCollectionsResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "CollectionIds",
        "c2jShape" : "CollectionIdList",
        "deprecated" : false,
        "documentation" : "<p>An array of collection IDs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of collection IDs.</p>\n@return An array of collection IDs.*/",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionIds",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CollectionId",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "simple" : true,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionIds",
        "setterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "collectionIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCollectionIds(java.util.Collection)} or {@link #withCollectionIds(java.util.Collection)} if you want to override the existing values.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "collectionIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>An array of collection IDs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@return If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionIds" : {
          "c2jName" : "CollectionIds",
          "c2jShape" : "CollectionIdList",
          "deprecated" : false,
          "documentation" : "<p>An array of collection IDs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of collection IDs.</p>\n@return An array of collection IDs.*/",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionIds",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CollectionId",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "simple" : true,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionIds",
          "setterDocumentation" : "/**<p>An array of collection IDs.</p>\n@param collectionIds An array of collection IDs.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "collectionIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of collection IDs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCollectionIds(java.util.Collection)} or {@link #withCollectionIds(java.util.Collection)} if you want to override the existing values.</p>\n@param collectionIds An array of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "collectionIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>An array of collection IDs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@return If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>\n@param nextToken If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the result is truncated, the response provides a <code>NextToken</code> that you can use in the subsequent request to fetch the next set of collection IDs.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ListCollectionsResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListCollectionsResult",
        "variableName" : "listCollectionsResult",
        "variableType" : "ListCollectionsResult",
        "documentation" : null,
        "simpleType" : "ListCollectionsResult",
        "variableSetterType" : "ListCollectionsResult"
      },
      "wrapper" : false
    },
    "ListFacesRequest" : {
      "c2jName" : "ListFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "ListFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.ListFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection from which to list the faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@return ID of the collection from which to list the faces.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection from which to list the faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@return If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxResults",
        "c2jShape" : "PageSize",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@return Maximum number of faces to return.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MaxResults",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MaxResults",
        "setterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection from which to list the faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@return ID of the collection from which to list the faces.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of the collection from which to list the faces.</p>\n@param collectionId ID of the collection from which to list the faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection from which to list the faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "MaxResults",
          "c2jShape" : "PageSize",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@return Maximum number of faces to return.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MaxResults",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MaxResults",
          "setterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return.</p>\n@param maxResults Maximum number of faces to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@return If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>\n@param nextToken If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the previous response was incomplete (because there is more data to retrieve), Amazon Rekognition returns a pagination token in the response. You can use this pagination token to retrieve the next set of faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId" ],
      "shapeName" : "ListFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ListFacesRequest",
        "variableName" : "listFacesRequest",
        "variableType" : "ListFacesRequest",
        "documentation" : null,
        "simpleType" : "ListFacesRequest",
        "variableSetterType" : "ListFacesRequest"
      },
      "wrapper" : false
    },
    "ListFacesResult" : {
      "c2jName" : "ListFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Faces",
        "c2jShape" : "FaceList",
        "deprecated" : false,
        "documentation" : "<p>An array of <code>Face</code> objects. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@return An array of <code>Face</code> objects.*/",
        "getterModel" : {
          "returnType" : "java.util.List<Face>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Faces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Faces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Face",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "Face",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "Face",
              "variableName" : "member",
              "variableType" : "Face",
              "documentation" : "",
              "simpleType" : "Face",
              "variableSetterType" : "Face"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "Face",
              "variableName" : "member",
              "variableType" : "Face",
              "documentation" : "",
              "simpleType" : "Face",
              "variableSetterType" : "Face"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Face",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Face",
          "templateImplType" : "java.util.ArrayList<Face>",
          "templateType" : "java.util.List<Face>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "Faces",
        "setterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<Face>",
          "variableName" : "faces",
          "variableType" : "java.util.List<Face>",
          "documentation" : "",
          "simpleType" : "List<Face>",
          "variableSetterType" : "java.util.Collection<Face>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaces(java.util.Collection)} or {@link #withFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<Face>",
          "variableName" : "faces",
          "variableType" : "java.util.List<Face>",
          "documentation" : "<p>An array of <code>Face</code> objects. </p>",
          "simpleType" : "List<Face>",
          "variableSetterType" : "java.util.Collection<Face>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "NextToken",
        "c2jShape" : "String",
        "deprecated" : false,
        "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@return If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "NextToken",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "NextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "NextToken",
        "setterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Faces" : {
          "c2jName" : "Faces",
          "c2jShape" : "FaceList",
          "deprecated" : false,
          "documentation" : "<p>An array of <code>Face</code> objects. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@return An array of <code>Face</code> objects.*/",
          "getterModel" : {
            "returnType" : "java.util.List<Face>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Faces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Faces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Face",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "Face",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "Face",
                "variableName" : "member",
                "variableType" : "Face",
                "documentation" : "",
                "simpleType" : "Face",
                "variableSetterType" : "Face"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "Face",
                "variableName" : "member",
                "variableType" : "Face",
                "documentation" : "",
                "simpleType" : "Face",
                "variableSetterType" : "Face"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Face",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Face",
            "templateImplType" : "java.util.ArrayList<Face>",
            "templateType" : "java.util.List<Face>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "Faces",
          "setterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n@param faces An array of <code>Face</code> objects.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<Face>",
            "variableName" : "faces",
            "variableType" : "java.util.List<Face>",
            "documentation" : "",
            "simpleType" : "List<Face>",
            "variableSetterType" : "java.util.Collection<Face>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of <code>Face</code> objects. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaces(java.util.Collection)} or {@link #withFaces(java.util.Collection)} if you want to override the existing values.</p>\n@param faces An array of <code>Face</code> objects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<Face>",
            "variableName" : "faces",
            "variableType" : "java.util.List<Face>",
            "documentation" : "<p>An array of <code>Face</code> objects. </p>",
            "simpleType" : "List<Face>",
            "variableSetterType" : "java.util.Collection<Face>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "NextToken",
          "c2jShape" : "String",
          "deprecated" : false,
          "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@return If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "NextToken",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "NextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "NextToken",
          "setterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>\n@param nextToken If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p>If the response is truncated, Amazon Rekognition returns this token that you can use in the subsequent request to retrieve the next set of faces.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "ListFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "ListFacesResult",
        "variableName" : "listFacesResult",
        "variableType" : "ListFacesResult",
        "documentation" : null,
        "simpleType" : "ListFacesResult",
        "variableSetterType" : "ListFacesResult"
      },
      "wrapper" : false
    },
    "MouthOpen" : {
      "c2jName" : "MouthOpen",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the mouth on the face is open, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@return Boolean value that indicates whether the mouth on the face is open or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@return Boolean value that indicates whether the mouth on the face is open or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the mouth on the face is open or not.</p>\n@param value Boolean value that indicates whether the mouth on the face is open or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the mouth on the face is open or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "MouthOpen",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "MouthOpen",
        "variableName" : "mouthOpen",
        "variableType" : "MouthOpen",
        "documentation" : null,
        "simpleType" : "MouthOpen",
        "variableSetterType" : "MouthOpen"
      },
      "wrapper" : false
    },
    "Mustache" : {
      "c2jName" : "Mustache",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face has a mustache, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@return Boolean value that indicates whether the face has mustache or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@return Boolean value that indicates whether the face has mustache or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face has mustache or not.</p>\n@param value Boolean value that indicates whether the face has mustache or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face has mustache or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Mustache",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Mustache",
        "variableName" : "mustache",
        "variableType" : "Mustache",
        "documentation" : null,
        "simpleType" : "Mustache",
        "variableSetterType" : "Mustache"
      },
      "wrapper" : false
    },
    "OrientationCorrection" : {
      "c2jName" : "OrientationCorrection",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : [ {
        "name" : "ROTATE_0",
        "value" : "ROTATE_0"
      }, {
        "name" : "ROTATE_90",
        "value" : "ROTATE_90"
      }, {
        "name" : "ROTATE_180",
        "value" : "ROTATE_180"
      }, {
        "name" : "ROTATE_270",
        "value" : "ROTATE_270"
      } ],
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "OrientationCorrection",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "OrientationCorrection",
        "variableName" : "orientationCorrection",
        "variableType" : "OrientationCorrection",
        "documentation" : null,
        "simpleType" : "OrientationCorrection",
        "variableSetterType" : "OrientationCorrection"
      },
      "wrapper" : false
    },
    "Pose" : {
      "c2jName" : "Pose",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates the pose of the face as determined by pitch, roll, and the yaw.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Roll",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@return Value representing the face rotation on the roll axis.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Roll",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Roll",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Roll",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "roll",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "roll",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Yaw",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@return Value representing the face rotation on the yaw axis.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Yaw",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Yaw",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Yaw",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "yaw",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "yaw",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Pitch",
        "c2jShape" : "Degree",
        "deprecated" : false,
        "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@return Value representing the face rotation on the pitch axis.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Pitch",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Pitch",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Pitch",
        "setterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "pitch",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "pitch",
          "variableType" : "Float",
          "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Pitch" : {
          "c2jName" : "Pitch",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@return Value representing the face rotation on the pitch axis.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Pitch",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Pitch",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Pitch",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "pitch",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the pitch axis.</p>\n@param pitch Value representing the face rotation on the pitch axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "pitch",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the pitch axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Roll" : {
          "c2jName" : "Roll",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@return Value representing the face rotation on the roll axis.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Roll",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Roll",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Roll",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "roll",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the roll axis.</p>\n@param roll Value representing the face rotation on the roll axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "roll",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the roll axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Yaw" : {
          "c2jName" : "Yaw",
          "c2jShape" : "Degree",
          "deprecated" : false,
          "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@return Value representing the face rotation on the yaw axis.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Yaw",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Yaw",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Yaw",
          "setterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "yaw",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Value representing the face rotation on the yaw axis.</p>\n@param yaw Value representing the face rotation on the yaw axis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "yaw",
            "variableType" : "Float",
            "documentation" : "<p>Value representing the face rotation on the yaw axis.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Pose",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Pose",
        "variableName" : "pose",
        "variableType" : "Pose",
        "documentation" : null,
        "simpleType" : "Pose",
        "variableSetterType" : "Pose"
      },
      "wrapper" : false
    },
    "ProvisionedThroughputExceededException" : {
      "c2jName" : "ProvisionedThroughputExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The number of requests exceeded your throughput limit. If you want to increase this limit, contact Amazon Rekognition.</p>",
      "enums" : null,
      "errorCode" : "ProvisionedThroughputExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "ProvisionedThroughputExceededException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ProvisionedThroughputExceededException",
        "variableName" : "provisionedThroughputExceededException",
        "variableType" : "ProvisionedThroughputExceededException",
        "documentation" : null,
        "simpleType" : "ProvisionedThroughputExceededException",
        "variableSetterType" : "ProvisionedThroughputExceededException"
      },
      "wrapper" : false
    },
    "ResourceAlreadyExistsException" : {
      "c2jName" : "ResourceAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The collection with specific ID already exist.</p>",
      "enums" : null,
      "errorCode" : "ResourceAlreadyExistsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "ResourceAlreadyExistsException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceAlreadyExistsException",
        "variableName" : "resourceAlreadyExistsException",
        "variableType" : "ResourceAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ResourceAlreadyExistsException",
        "variableSetterType" : "ResourceAlreadyExistsException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Collection specified in the request is not found.</p>",
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "S3Object" : {
      "c2jName" : "S3Object",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides the S3 bucket name and object name.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Bucket",
        "c2jShape" : "S3Bucket",
        "deprecated" : false,
        "documentation" : "<p>Name of the S3 bucket.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@return Name of the S3 bucket.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Bucket",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Bucket",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Bucket",
        "setterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucket",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "bucket",
          "variableType" : "String",
          "documentation" : "<p>Name of the S3 bucket.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Name",
        "c2jShape" : "S3ObjectName",
        "deprecated" : false,
        "documentation" : "<p>S3 object key name.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>S3 object key name.</p>\n@return S3 object key name.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Name",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Name",
        "setterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>S3 object key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Version",
        "c2jShape" : "S3ObjectVersion",
        "deprecated" : false,
        "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@return If the bucket is versioning enabled, you can specify the object version.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Version",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Version",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Version",
        "setterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "version",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "version",
          "variableType" : "String",
          "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Bucket" : {
          "c2jName" : "Bucket",
          "c2jShape" : "S3Bucket",
          "deprecated" : false,
          "documentation" : "<p>Name of the S3 bucket.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@return Name of the S3 bucket.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Bucket",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Bucket",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Bucket",
          "setterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucket",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Name of the S3 bucket.</p>\n@param bucket Name of the S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "bucket",
            "variableType" : "String",
            "documentation" : "<p>Name of the S3 bucket.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "Name",
          "c2jShape" : "S3ObjectName",
          "deprecated" : false,
          "documentation" : "<p>S3 object key name.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>S3 object key name.</p>\n@return S3 object key name.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Name",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Name",
          "setterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>S3 object key name.</p>\n@param name S3 object key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>S3 object key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Version" : {
          "c2jName" : "Version",
          "c2jShape" : "S3ObjectVersion",
          "deprecated" : false,
          "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@return If the bucket is versioning enabled, you can specify the object version.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Version",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Version",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Version",
          "setterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "version",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>If the bucket is versioning enabled, you can specify the object version. </p>\n@param version If the bucket is versioning enabled, you can specify the object version.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "version",
            "variableType" : "String",
            "documentation" : "<p>If the bucket is versioning enabled, you can specify the object version. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "S3Object",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "S3Object",
        "variableName" : "s3Object",
        "variableType" : "S3Object",
        "documentation" : null,
        "simpleType" : "S3Object",
        "variableSetterType" : "S3Object"
      },
      "wrapper" : false
    },
    "SearchFacesByImageRequest" : {
      "c2jName" : "SearchFacesByImageRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "SearchFacesByImage",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.SearchFacesByImage",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection to search.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection to search.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Image",
        "c2jShape" : "Image",
        "deprecated" : false,
        "documentation" : "",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**\n@return */",
        "getterModel" : {
          "returnType" : "Image",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Image",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Image",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Image",
        "setterDocumentation" : "/**\n@param image */",
        "setterModel" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Image",
          "variableName" : "image",
          "variableType" : "Image",
          "documentation" : "",
          "simpleType" : "Image",
          "variableSetterType" : "Image"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxFaces",
        "c2jShape" : "MaxFaces",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MaxFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MaxFaces",
        "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatchThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceMatchThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatchThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "FaceMatchThreshold",
        "setterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection to search.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection to search.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceMatchThreshold" : {
          "c2jName" : "FaceMatchThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceMatchThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatchThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "FaceMatchThreshold",
          "setterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold (Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "<p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Image" : {
          "c2jName" : "Image",
          "c2jShape" : "Image",
          "deprecated" : false,
          "documentation" : "",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**\n@return */",
          "getterModel" : {
            "returnType" : "Image",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Image",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Image",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Image",
          "setterDocumentation" : "/**\n@param image */",
          "setterModel" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**\n@param image \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Image",
            "variableName" : "image",
            "variableType" : "Image",
            "documentation" : "",
            "simpleType" : "Image",
            "variableSetterType" : "Image"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxFaces" : {
          "c2jName" : "MaxFaces",
          "c2jShape" : "MaxFaces",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MaxFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MaxFaces",
          "setterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId", "Image" ],
      "shapeName" : "SearchFacesByImageRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SearchFacesByImageRequest",
        "variableName" : "searchFacesByImageRequest",
        "variableType" : "SearchFacesByImageRequest",
        "documentation" : null,
        "simpleType" : "SearchFacesByImageRequest",
        "variableSetterType" : "SearchFacesByImageRequest"
      },
      "wrapper" : false
    },
    "SearchFacesByImageResult" : {
      "c2jName" : "SearchFacesByImageResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SearchedFaceBoundingBox",
        "c2jShape" : "BoundingBox",
        "deprecated" : false,
        "documentation" : "<p>The bounding box around the face in the input image that Rekognition used for the search.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@return The bounding box around the face in the input image that Rekognition used for the search.*/",
        "getterModel" : {
          "returnType" : "BoundingBox",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SearchedFaceBoundingBox",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceBoundingBox",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SearchedFaceBoundingBox",
        "setterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.*/",
        "setterModel" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "searchedFaceBoundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "BoundingBox",
          "variableName" : "searchedFaceBoundingBox",
          "variableType" : "BoundingBox",
          "documentation" : "<p>The bounding box around the face in the input image that Rekognition used for the search.</p>",
          "simpleType" : "BoundingBox",
          "variableSetterType" : "BoundingBox"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SearchedFaceConfidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@return The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SearchedFaceConfidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SearchedFaceConfidence",
        "setterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "searchedFaceConfidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "searchedFaceConfidence",
          "variableType" : "Float",
          "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "FaceMatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@return An array of faces that match the input face, along with the confidence in the match.*/",
        "getterModel" : {
          "returnType" : "java.util.List<FaceMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "FaceMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceMatch",
          "templateImplType" : "java.util.ArrayList<FaceMatch>",
          "templateType" : "java.util.List<FaceMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "FaceMatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@return An array of faces that match the input face, along with the confidence in the match.*/",
          "getterModel" : {
            "returnType" : "java.util.List<FaceMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "FaceMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceMatch",
            "templateImplType" : "java.util.ArrayList<FaceMatch>",
            "templateType" : "java.util.List<FaceMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of faces that match the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that match the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "<p>An array of faces that match the input face, along with the confidence in the match.</p>",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceBoundingBox" : {
          "c2jName" : "SearchedFaceBoundingBox",
          "c2jShape" : "BoundingBox",
          "deprecated" : false,
          "documentation" : "<p>The bounding box around the face in the input image that Rekognition used for the search.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@return The bounding box around the face in the input image that Rekognition used for the search.*/",
          "getterModel" : {
            "returnType" : "BoundingBox",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SearchedFaceBoundingBox",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceBoundingBox",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SearchedFaceBoundingBox",
          "setterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.*/",
          "setterModel" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "searchedFaceBoundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>The bounding box around the face in the input image that Rekognition used for the search.</p>\n@param searchedFaceBoundingBox The bounding box around the face in the input image that Rekognition used for the search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "BoundingBox",
            "variableName" : "searchedFaceBoundingBox",
            "variableType" : "BoundingBox",
            "documentation" : "<p>The bounding box around the face in the input image that Rekognition used for the search.</p>",
            "simpleType" : "BoundingBox",
            "variableSetterType" : "BoundingBox"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceConfidence" : {
          "c2jName" : "SearchedFaceConfidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@return The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SearchedFaceConfidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SearchedFaceConfidence",
          "setterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "searchedFaceConfidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>\n@param searchedFaceConfidence The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "searchedFaceConfidence",
            "variableType" : "Float",
            "documentation" : "<p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "SearchFacesByImageResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SearchFacesByImageResult",
        "variableName" : "searchFacesByImageResult",
        "variableType" : "SearchFacesByImageResult",
        "documentation" : null,
        "simpleType" : "SearchFacesByImageResult",
        "variableSetterType" : "SearchFacesByImageResult"
      },
      "wrapper" : false
    },
    "SearchFacesRequest" : {
      "c2jName" : "SearchFacesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : {
        "action" : "SearchFaces",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "RekognitionService.SearchFaces",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "CollectionId",
        "c2jShape" : "CollectionId",
        "deprecated" : false,
        "documentation" : "<p>ID of the collection to search.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "CollectionId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "CollectionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "CollectionId",
        "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "collectionId",
          "variableType" : "String",
          "documentation" : "<p>ID of the collection to search.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@return ID of a face to find matches for in the collection.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "FaceId",
        "setterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "faceId",
          "variableType" : "String",
          "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "MaxFaces",
        "c2jShape" : "MaxFaces",
        "deprecated" : false,
        "documentation" : "<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.*/",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "MaxFaces",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "MaxFaces",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "MaxFaces",
        "setterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.*/",
        "setterModel" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Integer",
          "variableName" : "maxFaces",
          "variableType" : "Integer",
          "documentation" : "<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatchThreshold",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceMatchThreshold",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatchThreshold",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "FaceMatchThreshold",
        "setterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "faceMatchThreshold",
          "variableType" : "Float",
          "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CollectionId" : {
          "c2jName" : "CollectionId",
          "c2jShape" : "CollectionId",
          "deprecated" : false,
          "documentation" : "<p>ID of the collection to search.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of the collection to search.</p>\n@return ID of the collection to search.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "CollectionId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "CollectionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "CollectionId",
          "setterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of the collection to search.</p>\n@param collectionId ID of the collection to search.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "collectionId",
            "variableType" : "String",
            "documentation" : "<p>ID of the collection to search.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceId" : {
          "c2jName" : "FaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@return ID of a face to find matches for in the collection.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "FaceId",
          "setterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of a face to find matches for in the collection.</p>\n@param faceId ID of a face to find matches for in the collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "faceId",
            "variableType" : "String",
            "documentation" : "<p>ID of a face to find matches for in the collection.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FaceMatchThreshold" : {
          "c2jName" : "FaceMatchThreshold",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@return Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceMatchThreshold",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatchThreshold",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "FaceMatchThreshold",
          "setterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>\n@param faceMatchThreshold Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "faceMatchThreshold",
            "variableType" : "Float",
            "documentation" : "<p>Optional value specifying the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxFaces" : {
          "c2jName" : "MaxFaces",
          "c2jShape" : "MaxFaces",
          "deprecated" : false,
          "documentation" : "<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@return Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.*/",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "MaxFaces",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "MaxFaces",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "MaxFaces",
          "setterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.*/",
          "setterModel" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>\n@param maxFaces Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Integer",
            "variableName" : "maxFaces",
            "variableType" : "Integer",
            "documentation" : "<p>Maximum number of faces to return. The API will return the maximum number of faces with the highest confidence in the match.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : [ "CollectionId", "FaceId" ],
      "shapeName" : "SearchFacesRequest",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "SearchFacesRequest",
        "variableName" : "searchFacesRequest",
        "variableType" : "SearchFacesRequest",
        "documentation" : null,
        "simpleType" : "SearchFacesRequest",
        "variableSetterType" : "SearchFacesRequest"
      },
      "wrapper" : false
    },
    "SearchFacesResult" : {
      "c2jName" : "SearchFacesResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "SearchedFaceId",
        "c2jShape" : "FaceId",
        "deprecated" : false,
        "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@return ID of the face that was searched for matches in a collection.*/",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "SearchedFaceId",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SearchedFaceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "SearchedFaceId",
        "setterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.*/",
        "setterModel" : {
          "variableDeclarationType" : "String",
          "variableName" : "searchedFaceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "String",
          "variableName" : "searchedFaceId",
          "variableType" : "String",
          "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "FaceMatches",
        "c2jShape" : "FaceMatchList",
        "deprecated" : false,
        "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@return An array of faces that matched the input face, along with the confidence in the match.*/",
        "getterModel" : {
          "returnType" : "java.util.List<FaceMatch>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "FaceMatches",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "FaceMatches",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FaceMatch",
            "deprecated" : false,
            "documentation" : "",
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "getterDocumentation" : "/**\n@return */",
            "getterModel" : {
              "returnType" : "FaceMatch",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocationName" : "member",
              "queryString" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "name" : "Member",
            "setterDocumentation" : "/**\n@param member */",
            "setterModel" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "simple" : false,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "variableDeclarationType" : "FaceMatch",
              "variableName" : "member",
              "variableType" : "FaceMatch",
              "documentation" : "",
              "simpleType" : "FaceMatch",
              "variableSetterType" : "FaceMatch"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FaceMatch",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FaceMatch",
          "templateImplType" : "java.util.ArrayList<FaceMatch>",
          "templateType" : "java.util.List<FaceMatch>"
        },
        "map" : false,
        "mapModel" : null,
        "name" : "FaceMatches",
        "setterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.*/",
        "setterModel" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "simple" : false,
        "varargSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "java.util.List<FaceMatch>",
          "variableName" : "faceMatches",
          "variableType" : "java.util.List<FaceMatch>",
          "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
          "simpleType" : "List<FaceMatch>",
          "variableSetterType" : "java.util.Collection<FaceMatch>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FaceMatches" : {
          "c2jName" : "FaceMatches",
          "c2jShape" : "FaceMatchList",
          "deprecated" : false,
          "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@return An array of faces that matched the input face, along with the confidence in the match.*/",
          "getterModel" : {
            "returnType" : "java.util.List<FaceMatch>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "FaceMatches",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "FaceMatches",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FaceMatch",
              "deprecated" : false,
              "documentation" : "",
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "getterDocumentation" : "/**\n@return */",
              "getterModel" : {
                "returnType" : "FaceMatch",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocationName" : "member",
                "queryString" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "name" : "Member",
              "setterDocumentation" : "/**\n@param member */",
              "setterModel" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "simple" : false,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "variableDeclarationType" : "FaceMatch",
                "variableName" : "member",
                "variableType" : "FaceMatch",
                "documentation" : "",
                "simpleType" : "FaceMatch",
                "variableSetterType" : "FaceMatch"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FaceMatch",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FaceMatch",
            "templateImplType" : "java.util.ArrayList<FaceMatch>",
            "templateType" : "java.util.List<FaceMatch>"
          },
          "map" : false,
          "mapModel" : null,
          "name" : "FaceMatches",
          "setterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.*/",
          "setterModel" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "simple" : false,
          "varargSetterDocumentation" : "/**<p>An array of faces that matched the input face, along with the confidence in the match.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFaceMatches(java.util.Collection)} or {@link #withFaceMatches(java.util.Collection)} if you want to override the existing values.</p>\n@param faceMatches An array of faces that matched the input face, along with the confidence in the match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "java.util.List<FaceMatch>",
            "variableName" : "faceMatches",
            "variableType" : "java.util.List<FaceMatch>",
            "documentation" : "<p>An array of faces that matched the input face, along with the confidence in the match.</p>",
            "simpleType" : "List<FaceMatch>",
            "variableSetterType" : "java.util.Collection<FaceMatch>"
          },
          "xmlNameSpaceUri" : null
        },
        "SearchedFaceId" : {
          "c2jName" : "SearchedFaceId",
          "c2jShape" : "FaceId",
          "deprecated" : false,
          "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@return ID of the face that was searched for matches in a collection.*/",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "SearchedFaceId",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SearchedFaceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "SearchedFaceId",
          "setterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.*/",
          "setterModel" : {
            "variableDeclarationType" : "String",
            "variableName" : "searchedFaceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>ID of the face that was searched for matches in a collection.</p>\n@param searchedFaceId ID of the face that was searched for matches in a collection.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "String",
            "variableName" : "searchedFaceId",
            "variableType" : "String",
            "documentation" : "<p>ID of the face that was searched for matches in a collection.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "SearchFacesResult",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "SearchFacesResult",
        "variableName" : "searchFacesResult",
        "variableType" : "SearchFacesResult",
        "documentation" : null,
        "simpleType" : "SearchFacesResult",
        "variableSetterType" : "SearchFacesResult"
      },
      "wrapper" : false
    },
    "Smile" : {
      "c2jName" : "Smile",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is smiling, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@return Boolean value that indicates whether the face is smiling or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@return Boolean value that indicates whether the face is smiling or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is smiling or not.</p>\n@param value Boolean value that indicates whether the face is smiling or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is smiling or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Smile",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Smile",
        "variableName" : "smile",
        "variableType" : "Smile",
        "documentation" : null,
        "simpleType" : "Smile",
        "variableSetterType" : "Smile"
      },
      "wrapper" : false
    },
    "Sunglasses" : {
      "c2jName" : "Sunglasses",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates whether or not the face is wearing sunglasses, and the confidence level in the determination.</p>",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "Value",
        "c2jShape" : "Boolean",
        "deprecated" : false,
        "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@return Boolean value that indicates whether the face is wearing sunglasses or not.*/",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Value",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Value",
        "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.*/",
        "setterModel" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Boolean",
          "variableName" : "value",
          "variableType" : "Boolean",
          "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Confidence",
        "c2jShape" : "Percent",
        "deprecated" : false,
        "documentation" : "<p>Level of confidence in the determination.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
        "getterModel" : {
          "returnType" : "Float",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocationName" : "Confidence",
          "queryString" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Confidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "name" : "Confidence",
        "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
        "setterModel" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "simple" : true,
        "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "variableDeclarationType" : "Float",
          "variableName" : "confidence",
          "variableType" : "Float",
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "simpleType" : "Float",
          "variableSetterType" : "Float"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Confidence" : {
          "c2jName" : "Confidence",
          "c2jShape" : "Percent",
          "deprecated" : false,
          "documentation" : "<p>Level of confidence in the determination.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@return Level of confidence in the determination.*/",
          "getterModel" : {
            "returnType" : "Float",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Confidence",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Confidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Confidence",
          "setterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.*/",
          "setterModel" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Level of confidence in the determination.</p>\n@param confidence Level of confidence in the determination.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Float",
            "variableName" : "confidence",
            "variableType" : "Float",
            "documentation" : "<p>Level of confidence in the determination.</p>",
            "simpleType" : "Float",
            "variableSetterType" : "Float"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "Value",
          "c2jShape" : "Boolean",
          "deprecated" : false,
          "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "getterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@return Boolean value that indicates whether the face is wearing sunglasses or not.*/",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocationName" : "Value",
            "queryString" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "name" : "Value",
          "setterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.*/",
          "setterModel" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "simple" : true,
          "varargSetterDocumentation" : "/**<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>\n@param value Boolean value that indicates whether the face is wearing sunglasses or not.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "variableDeclarationType" : "Boolean",
            "variableName" : "value",
            "variableType" : "Boolean",
            "documentation" : "<p>Boolean value that indicates whether the face is wearing sunglasses or not.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "required" : null,
      "shapeName" : "Sunglasses",
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "variableDeclarationType" : "Sunglasses",
        "variableName" : "sunglasses",
        "variableType" : "Sunglasses",
        "documentation" : null,
        "simpleType" : "Sunglasses",
        "variableSetterType" : "Sunglasses"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Amazon Rekognition is temporarily unable to process the request. Try your call again.</p>",
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "hasUriMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "required" : null,
      "shapeName" : "ThrottlingException",
      "unmarshaller" : null,
      "variable" : {
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2011-2016 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonRekognitionException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.rekognition.model.AmazonRekognitionException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException"
}